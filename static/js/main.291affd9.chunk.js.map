{"version":3,"sources":["redux/constants.ts","redux/reducers/users.ts","redux/reducers/logUser.ts","redux/reducers/form.ts","redux/rootReducer.ts","redux/actions.ts","utils/index.ts","redux/sagas.ts","redux/store.ts","components/PublicRoute.tsx","components/PrivateRoute.tsx","components/SignIn.tsx","components/Book.tsx","components/Home.tsx","components/User.tsx","components/FormAddComponents.tsx","components/FormAdd.tsx","containers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILED","LOG_OUT","ROUTES","phone","personId","edit","id","GET_USERS_REQUESTED","GET_USERS_SUCCESS","GET_USERS_FAILED","SHOW_FORM_ERRORS","initialStateFetch","users","loading","error","initialStateLogUser","isLogged","isLoading","email","initialStateFormErrors","errors","rootReducer","combineReducers","logUser","state","action","type","message","showFormErrors","logInRequest","logOut","getUsersSuccess","TOKEN_KEY","fetchUsers","logInSaga","logOutSaga","handleLogInOut","userSaga","rootSaga","getPhones","fetch","headers","Accept","then","response","json","data","phones","catch","e","console","log","toString","delay","call","put","localStorage","setItem","removeItem","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","PublicRoute","Component","component","restricted","rest","useSelector","render","props","to","pathname","PrivateRoute","SignIn","useForm","register","handleSubmit","watch","formState","emailValue","dispatch","useDispatch","onSubmit","className","validate","required","value","length","isCorrect","test","placeholder","capital","search","small","digits","password","Book","sort","a","b","name","last","localeCompare","useEffect","map","i","slice","first","Home","onClick","User","useParams","person","useMemo","find","u","isActive","age","company","address","registered","Form","defaultValues","children","Array","isArray","child","React","createElement","key","Input","Select","options","FormAdd","isCorrectLength","match","join","startsCorrectly","App","getItem","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.291affd9.chunk.js","sourcesContent":["export const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const GET_PHONES = 'GET_PHONES';\n\nexport const ROUTES = {\n  main: '/',\n  home: '/home',\n  login: '/login',\n  add: '/add',\n  projectName: '/phone_book', // webstorm adds it\n  dynamic: {\n    phone: (personId = ':personId') => `/${personId}`,\n    edit: (id = ':id') => `/edit/${id}`\n  }\n};\n\nexport const GET_USERS_REQUESTED = 'GET_USERS_REQUESTED';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';\n\nexport const SEND_USER_REQUESTED = 'SEND_USER_REQUESTED';\nexport const SEND_USER_SUCCESS = 'SEND_USER_SUCCESS';\nexport const SEND_USER_FAILED = 'SEND_USER_FAILED';\n\nexport const UPDATE_USER_REQUESTED = 'UPDATE_USER_REQUESTED';\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_FAILED = 'UPDATE_USER_FAILED';\n\nexport const SHOW_FORM_ERRORS = 'SHOW_FORM_ERRORS';","import {Reducer} from 'redux'\nimport {\n  GET_USERS_REQUESTED,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILED,\n} from '../constants';\nimport { IPerson } from '../../containers/App';\nconst initialStateFetch: UsersReturnType = {\n  users: [],\n  loading: false,\n  error: null,\n};\n\nexport type UsersArgsType = {\n  type: typeof GET_USERS_SUCCESS | typeof GET_USERS_FAILED | typeof GET_USERS_REQUESTED;\n  users?: Array<IPerson>;\n  message?: string;\n};\n\ntype UsersReturnType = {\n  loading?: boolean;\n  users?: Array<IPerson>;\n  error?: string | null;\n};\n\nexport const  users: Reducer<UsersReturnType, UsersArgsType> = (state = initialStateFetch, action): UsersReturnType => {\n  switch (action.type) {\n    case GET_USERS_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.users,\n      };\n    case GET_USERS_FAILED:\n      return {\n        ...state,\n        loading: false,\n        error: action.message,\n      };\n    default:\n      return state;\n  }\n}","import {Reducer} from 'redux';\nimport {\n  LOG_IN_REQUEST,\n  LOG_IN_FAILED,\n  LOG_IN_SUCCESS,\n  LOG_OUT,\n} from '../constants';\nexport const initialStateLogUser: LogUserReturnType = {\n  isLogged: false,\n  isLoading: false,\n  email: '',\n  error: null,\n};\n\nexport type LogUserArgsType = {\n  type: typeof LOG_IN_REQUEST | typeof LOG_IN_SUCCESS | typeof LOG_IN_FAILED | typeof LOG_OUT;\n  error: null | string;\n  message: string;\n};\n\ntype LogUserReturnType = {\n  isLogged?: boolean;\n  isLoading?: boolean;\n  email: string;\n  error?: null | string;\n};\n\nexport const logUser: Reducer<LogUserReturnType, LogUserArgsType> = (state = initialStateLogUser, action):LogUserReturnType => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isLogged: true,\n      };\n    case LOG_IN_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        isLogged: false,\n        error: action.message,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLogged: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { SHOW_FORM_ERRORS } from \"../constants\";\nimport { initialStateLogUser, LogUserArgsType } from \"./logUser\";\n\nconst initialStateFormErrors = {\n  errors: {}\n}\nexport const showFormErrors: Reducer<any, any> = (state = initialStateFormErrors, action):any => {\n  switch (action.type) {\n    case SHOW_FORM_ERRORS:\n      return {\n        ...state,\n        errors: action.errors,\n      };\n    default:\n      return state;\n  }\n};","import { combineReducers } from \"redux\";\nimport {users} from \"./reducers/users\";\nimport {logUser} from \"./reducers/logUser\";\nimport { showFormErrors } from \"./reducers/form\";\nexport const rootReducer = combineReducers({\n  logUser,\n  users,\n  showFormErrors\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILED,\n  LOG_OUT,\n  GET_USERS_REQUESTED, GET_USERS_SUCCESS, GET_USERS_FAILED,\n  SEND_USER_REQUESTED, SEND_USER_SUCCESS, SEND_USER_FAILED,\n  UPDATE_USER_REQUESTED, UPDATE_USER_SUCCESS, UPDATE_USER_FAILED,\n  SHOW_FORM_ERRORS,\n} from \"./constants\";\nimport { IPerson } from \"../containers/App\";\n\ntype LogInRequestType = {\n    type: typeof LOG_IN_REQUEST,\n}\ntype LogInSuccessType = {\n  type: typeof LOG_IN_SUCCESS,\n}\ntype LogInFailedType = {\n  type: typeof LOG_IN_FAILED,\n  message: boolean,\n}\ntype LogOutType = {\n    type: typeof LOG_OUT,\n}\n\ntype GetUsersType = {\n    type: typeof GET_USERS_REQUESTED,\n}\ntype GetUsersSuccessType = {\n  type: typeof GET_USERS_SUCCESS,\n  users: Array<IPerson>\n}\ntype GetUsersFailedType = {\n  type: typeof GET_USERS_FAILED,\n  message: string\n}\n\ntype ActionsType = LogInRequestType | LogInSuccessType| LogInFailedType| LogOutType | GetUsersType | GetUsersSuccessType | GetUsersFailedType ;\n\n\nexport const logInRequest = (email = ''): ActionsType => ({ type: LOG_IN_REQUEST }); //called in components, saga listens\nexport const logInSuccess = (): ActionsType => ({ type: LOG_IN_SUCCESS});\nexport const logInFailed = (e: any): ActionsType => ({ type: LOG_IN_FAILED, message: e.message });\nexport const logOut = (): ActionsType => ({ type: LOG_OUT });\n\nexport const getUsers = (): ActionsType => ({ type: GET_USERS_REQUESTED });\nexport const getUsersSuccess = (users: Array<IPerson>): ActionsType => ({ type: GET_USERS_SUCCESS, users: users });\nexport const getUsersFailed = (e: any): ActionsType => ({ type: GET_USERS_FAILED, message: e.message });\n\nexport const sendUser = (): any => ({ type: SEND_USER_REQUESTED });\nexport const sendUsersSuccess = (): any => ({ type: SEND_USER_SUCCESS });\nexport const sendUsersFailed = (e: any): any => ({ type: SEND_USER_FAILED, message: e.message });\n\nexport const updateUser = (): any => ({ type: UPDATE_USER_REQUESTED });\nexport const updateUsersSuccess = (): any => ({ type: UPDATE_USER_SUCCESS });\nexport const updateUsersFailed = (e: any): any => ({ type: UPDATE_USER_FAILED, message: e.message });\n\nexport const showFormErrors = (errors: object): any => ({type: SHOW_FORM_ERRORS, errors: errors});\n","const TOKEN_KEY = 'current user';\n\nexport const loginToStorage = (/*/email: string*/): void => {\n  localStorage.setItem(TOKEN_KEY, /*email*/ 'some email');\n};\n\nexport const logoutOfStorage = (): void => {\n  localStorage.removeItem(TOKEN_KEY);\n};\n\nexport const isInStorage = (): boolean => {\n  if (localStorage.getItem(TOKEN_KEY)) {\n    return true;\n  }\n\n  return false;\n};\n","import { put, takeEvery, all, call, delay } from 'redux-saga/effects';\nimport {\n  GET_USERS_REQUESTED,\n  LOG_IN_REQUEST,\n  LOG_OUT,\n} from './constants';\nimport {logInSuccess, logInFailed, logOut, getUsersSuccess, getUsersFailed } from './actions';\nimport { loginToStorage, logoutOfStorage } from '../utils';\nimport {} from './constants';\nimport { IPerson } from '../containers/App';\n\ntype FetchUserParams = {\n  type: string;\n  users?: Array<IPerson>;\n  message?: string;\n};\n\nconst URL = 'http://localhost:3000/phones.json';\nconst getPhones = () => {\n  return fetch(URL, {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  })\n    .then(response => response.json())\n    .then(data => data.phones)\n    .catch(e => {\n      console.log(e.toString());\n    });\n};\n\n\n\nfunction* fetchUsers(action: FetchUserParams): any {\n  //Since a generator function can technically return a dynamic value depending on how next() is called, Redux-Saga had decided it best to use type any rather than try to infer a type.\n  try {\n    yield delay(1000);\n    const users = yield call(getPhones);\n    yield put(getUsersSuccess(users)); //put === dispatch(action.type, payload)\n  } catch (e) {\n    yield put(getUsersFailed(e));\n  }\n}\n\nfunction* logInSaga(action: any): any {\n  try {\n    yield delay(1000);\n    loginToStorage();\n    yield put(logInSuccess());\n  } catch (e) {\n    yield put(logInFailed(e));\n  }\n}\nfunction* logOutSaga(action: any): any {\n  logoutOfStorage();\n  yield put(logOut());\n}\n\nfunction* handleLogInOut(): any {\n  //watcher\n  yield takeEvery(LOG_IN_REQUEST, logInSaga);\n  yield takeEvery(LOG_OUT, logOutSaga);\n}\n\nfunction* userSaga(): any {\n  //watcher\n  yield takeEvery(GET_USERS_REQUESTED, fetchUsers); //listens to action with action.type GET_USERS_REQUESTED,  and when it is called calls function  fetchUsers\n} //action is still being dispatched\n\nexport default function* rootSaga(): any {\n  yield all([\n    userSaga(), //fetch\n    handleLogInOut(),\n  ]);\n}\n\n\n\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {  LogUserArgsType } from './reducers/logUser';\nimport {  UsersArgsType  } from './reducers/users';\nimport {rootReducer, RootState} from './rootReducer'\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n\nexport const sagaAction = (type: any ) => store.dispatch({ type }); //saga\n\nexport default store;\n","import React, { useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ROUTES } from '../redux/constants';\nimport { useSelector } from 'react-redux';\ntype PublicRouteProps = {\n  component: any;\n  restricted: any;\n  path: string;\n  exact: boolean;\n};\nconst PublicRoute = ({ component: Component, restricted, ...rest }: PublicRouteProps): React.ReactElement => {\n  const state: any = useSelector(state => state);\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        state.logUser.isLogged && restricted ? <Redirect to={{ pathname: ROUTES.main }} /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ROUTES } from '../redux/constants';\nimport { useSelector } from 'react-redux';\n\ntype PrivateRouteProps = {\n  component: any;\n  path: string;\n  exact?: boolean;\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }: PrivateRouteProps): React.ReactElement => {\n  const state: any = useSelector(state => state);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        state.logUser.isLogged ? <Component {...props} /> : <Redirect to={{ pathname: ROUTES.login }} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { FC} from 'react';\nimport { logInRequest } from '../redux/actions';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/rootReducer';\nexport const SignIn: FC = (): React.ReactElement => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const emailValue = watch('email');\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state: RootState | any) => state.logUser.isLoading);\n  const handleLogin = ():void => {\n    dispatch(logInRequest(emailValue)); // saga watcher listens\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(handleLogin)} className='form'>\n        {' '}\n        {/* your form submit function which will invoke after successful validation*/}\n        {/* register your input into the hook by invoking the \"register\" function */}\n        <input\n          {...register('email', {\n            //name=== errors obj property containing all validation errors for this specific field\n            validate: {\n              required: value => value.length || 'This field is required', //so validation need to return false to be passed\n              isCorrect: value => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) || 'Invalid email address',\n            },\n          })}\n          className='form__field'\n          placeholder=\"email\"\n        />\n        {/* errors will return when field validation fails  */}\n        {errors.email && <span>{errors.email?.message}</span>}{' '}\n        {/*errors.email?.message - one entity for all possible messages*/}\n        {/* include validation with required or other standard HTML validation rules */}\n        <input\n          {...register('password', {\n            validate: {\n              required: value => value.length || 'This field is required',\n              length: value => value.length > 8 || 'Needs at least 8 symbols',\n              capital: value => value.search(/[A-Z]/) !== -1 || 'Must contain at least 1 capital letter',\n              small: value => value.search(/[a-z]/) !== -1 || 'Must contain at least 1 small letter',\n              digits: value => value.search(/[0-9]/) !== -1 || 'Must contain at least 1 digit',\n            },\n          })}\n          className='form__field'\n          type=\"password\"\n          placeholder=\"password\"\n        />\n        {errors.password && <span>{errors.password?.message}</span>}\n        <input type='submit' className='form__button' />\n      </form>\n      {isLoading ? (\n        <div className='dialog'>\n          <div className='dialog__overlay'>\n            <div className='dialog__window'>\n              <p className='dialog__msg'>Getting access...</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, FC } from 'react';\nimport { IPerson } from '../containers/App';\nimport { Link, Route, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUsers } from '../redux/actions';\nimport { ROUTES } from '../redux/constants';\nimport { RootState } from '../redux/rootReducer';\n\nconst Book: FC = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const phones = useSelector((state: RootState | any) =>\n    state.users.users?.sort((a: any, b: any) => a.name.last.localeCompare(b.name.last))\n  );\n  const loading = useSelector((state: RootState | any) => state.users.loading);\n  useEffect(() => {\n    dispatch(getUsers());\n    // eslint-disable-next-line\n  }, []);\n\n\n  return (\n    <main className='main'>\n      <div className='bg'>\n        <div className='container'>\n          <Link to={{ pathname: ROUTES.home }} className='main__link'>\n            Go home\n          </Link>\n        </div>\n      </div>\n      <div className='container'>\n\n        <button\n          type=\"button\"\n          className=\"form__button\"\n        >\n          Send contacts\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"form__button\"\n        >\n          Update contacts\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"form__button\"\n        >\n          Delete user\n        </button>\n\n        <Link to={ROUTES.add} className=\"form__button\">\n          Add user\n        </Link>\n\n\n        {loading ? (\n          <p>Wait for it...</p>\n        ) : (\n          <ul>\n            {phones?.map(({ id, name, phone }: IPerson, i: number) => {\n              if (phones[i - 1]?.name.last.slice(0, 1) !== phones[i]?.name.last.slice(0, 1)) {\n                return (\n                  <li key={id} className='withSeparator'>\n                    <p>{phones[i].name.last.slice(0, 1)} </p>\n                    <ul className='firstInRow'>\n                      <li className='name'>\n                        <Link to={`/${id}`}>\n                          {name.last} {name.first}\n                        </Link>\n                      </li>\n                    </ul>\n                  </li>\n                );\n              } else {\n                return (\n                  <li key={id} className='name'>\n                    <Link to={`/${id}`}>\n                    {name.last} {name.first}\n                    </Link>\n                  </li>\n                );\n              }\n            })}\n          </ul>\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default Book;\n","import React, {FC} from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { logOut } from '../redux/actions';\nimport { ROUTES } from '../redux/constants';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Home: FC = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = (): void => {\n    dispatch(logOut()); // saga watcher listens\n  };\n  const state: any = useSelector(state => state);\n  return (\n    <div>\n      <h1>Home</h1>\n      {state.logUser.isLogged ? (\n        <button onClick={() => handleLogout()}>Click here to log out</button>\n      ) : (\n        <Link to={{ pathname: ROUTES.login }}>Go to sign in page</Link>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { FC, useEffect, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/rootReducer\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst User: FC = () => {\n  const { personId } = useParams<{personId: string}>();\n  const users = useSelector((state: RootState)=> state.users.users);\n  const person = useMemo(() => users?.find(u => u.id === personId), [users, personId]);\n\n  return person\n    ? (\n    <>\n      <div className=\"container\">\n        <Link to={`edit/${person.id}`}>\n          Edit user\n        </Link>\n        <div className=\"person\">\n          <h1>{person.name.first} {person.name.last}</h1>\n          <p>\n            <span className=\"person__info-title\">id:  </span>\n            <span className=\"person__info-description\">{person.id}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Status:  </span>\n            <span className=\"person__info-description\">{person.isActive? `active` : `not active`}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Age:  </span>\n            <span className=\"person__info-description\">{person.age}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Company:  </span>\n            <span className=\"person__info-description\">{person.company}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Email:  </span>\n            <span className=\"person__info-description\">{person.email}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Phone:  </span>\n            <span className=\"person__info-description\">{person.phone}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Address: </span>\n            <span className=\"person__info-description\">{person.address}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Registered:  </span>\n            <span className=\"person__info-description\">{person.registered}</span>\n          </p>\n        </div>\n      </div>\n    </>\n  )\n    : null\n};\n\nexport default User;","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { showFormErrors } from \"../redux/actions\";\nexport function Form({ defaultValues, children, onSubmit }: any) {\n  const {\n    handleSubmit,\n    register,\n    watch,\n    formState: { errors },\n  } = useForm({ defaultValues });\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  useEffect(() => {\n    console.log('errors', errors/*errors.email?.message*/);\n    // @ts-ignore\n    //console.log('state', state.showFormErrors);\n    dispatch(showFormErrors(errors))\n  },[errors.email])\n  return (\n    <div className=\"container\">\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className=\"add-form\"\n      >\n        <p className=\"edit-form__title\">\n          Edit profile\n        </p>\n        {Array.isArray(children)\n          ? children.map((child) => {\n            return child?.props?.name\n              ? React.createElement(child.type, {\n                ...{\n                  ...child.props,\n                  register,\n                  key: child.props.name\n                },\n              })\n              : child;\n          })\n          : children}\n      </form>\n    </div>\n\n  );\n}\n\nexport function Input({ defaultValues, register, name, validate, /*errors,*/ ...rest }:any) {\n\n  return (\n    <>\n      <input\n        {...register(name, validate)}\n        {...rest}\n        className=\"add-form__field\"\n      />\n    </>\n\n  );\n}\n\nexport function Select({ register, options, name, ...rest }:any) {\n  return (\n    <select\n      {...register(name)}\n      {...rest}\n      className=\"edit-form__field\"\n    >\n      {options.map((value: any) => (\n        <option value={value}>{value}</option>\n      ))}\n    </select>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Form, Input, Select } from \"./FormAddComponents\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { showFormErrors } from \"../redux/actions\";\n\n\nfunction FormAdd({defaultValues}: any) {\n  // @ts-ignore\n  const errors = useSelector(state => state.showFormErrors.errors);\n  const onSubmit = (data: any) => console.log(data);\n\n  useEffect(() => {\n    // @ts-ignore\n    console.log('errors mail', errors.email?.message);\n    console.log('errors age', errors.age?.message);\n    console.log('errors age', errors.phone?.message);\n  })\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n\n        <Input\n          type=\"text\"\n          name=\"firstName\"\n          placeholder=\"First name\"\n        />\n\n        <Input\n          type=\"text\"\n          name=\"lastName\"\n          placeholder=\"Last name\"\n        />\n\n        <Input\n          type=\"number\"\n          name=\"age\"\n          placeholder=\"Age\"\n          validate={\n            {\n              validate: {\n                required: (value: any) => value.length || 'This field is required',\n                isCorrect: (value: any) => +value >= 1 && +value <= 120|| 'Your age must be 1 to 120 years',\n              }\n            }\n          }\n        />\n        {errors.age?.message && <span>{errors.age?.message}</span>}\n\n        <Select\n          name=\"status\"\n          options={[\"active\", \"not active\"]}\n        />\n\n        <Input\n          type=\"text\"\n          name=\"company\"\n          placeholder=\"Company\"\n        />\n\n        <Input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          validate={\n            {\n              validate: {\n                required: (value: any) => value.length || 'This field is required',\n                isCorrect: (value: any) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) || 'Invalid email address',\n              }\n            }\n          }\n        />\n        {errors.email?.message && <span>{errors.email?.message}</span>}\n\n        <Input\n          type=\"text\"\n          name=\"phone\"\n          placeholder=\"Phone\"\n          validate={\n            {\n              validate: {\n                required: (value: any) => value.length || 'This field is required',\n                isCorrectLength: (value: any) => value.match(/[0-9]/g).join('').length !== 11 || 'Phone number must contain 11 digits',\n                startsCorrectly: (value: any) => value.slice(0,1) === '1' || value.slice(1,2) === '1' || 'Phone number must start with 1',\n              }\n            }\n          }\n        />\n        {errors.phone?.message && <span>{errors.phone?.message}</span>}\n\n        <Input\n          type=\"text\"\n          name=\"address\"\n          placeholder=\"Address\"\n        />\n\n        <Input\n          type=\"text\"\n          name=\"registered\"\n          placeholder=\"Registered\"\n\n        />\n\n        <button\n        className=\"form__button\"\n        >\n          Submit\n        </button>\n      </Form>\n    </>\n  );\n}\nexport default FormAdd;","import React, { useEffect } from 'react';\nimport './App.css';\nimport { Redirect, Switch, Route, useLocation } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport PublicRoute from '../components/PublicRoute';\nimport PrivateRoute from '../components/PrivateRoute';\nimport { SignIn } from '../components/SignIn';\nimport { isInStorage } from '../utils';\nimport Book from '../components/Book';\nimport Home from '../components/Home';\nimport User from \"../components/User\";\n//import EditForm from \"../components/EditForm\";\nimport FormAdd from \"../components/FormAdd\";\nimport { ROUTES } from '../redux/constants';\nimport { logInRequest } from '../redux/actions';\nimport { RootState } from \"../redux/rootReducer\";\ninterface IName {\n  first: string;\n  last: string;\n}\n\nexport interface IPerson {\n  id: string;\n  isActive: boolean;\n  age?: number;\n  name: IName;\n  company?: string;\n  email?: string;\n  phone: string;\n  address?: string;\n  registered: string;\n}\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isInStorage()) {\n      dispatch(logInRequest()); // saga watcher listens\n    }\n  }, [dispatch]);\n\n  return (\n    <>\n      <Switch>\n        <PrivateRoute component={FormAdd} path={ROUTES.add} />\n        {/*<PrivateRoute component={EditForm} path={ROUTES.dynamic.edit()} />*/}\n        <PrivateRoute component={Book} path={ROUTES.main} exact />\n        <PublicRoute restricted={false} component={Home} path={ROUTES.home} exact />\n        <PublicRoute restricted={true} component={SignIn} path={ROUTES.login} exact />\n        <PrivateRoute component={User} path={ROUTES.dynamic.phone()} exact />\n\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}