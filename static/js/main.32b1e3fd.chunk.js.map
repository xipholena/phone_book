{"version":3,"sources":["redux/constants.ts","redux/reducers/users.ts","redux/reducers/logUser.ts","redux/rootReducer.ts","redux/actions.ts","utils/index.ts","redux/sagas.ts","redux/store.ts","components/PublicRoute.tsx","components/PrivateRoute.tsx","components/SignIn.tsx","components/Book.tsx","components/Home.tsx","components/User.tsx","components/EditForm.tsx","components/FormAdd.tsx","containers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILED","LOG_OUT","LOG_OUT_SUCCESS","ROUTES","phone","personId","edit","id","GET_USERS_REQUESTED","GET_USERS_SUCCESS","GET_USERS_FAILED","SEND_USER_REQUESTED","SEND_USER_SUCCESS","UPDATE_USER_REQUESTED","DELETE_USER_REQUESTED","DELETE_USER_SUCCESS","initialStateFetch","users","loading","error","isMakingRequest","initialStateLogUser","isLogged","isLoading","email","rootReducer","combineReducers","logUser","state","action","type","message","isLeaving","users1","newUser","filter","user","userId","logInRequest","getUsersSuccess","sendUserSuccess","deleteUsersSuccess","TOKEN_KEY","fetchUsers","userSaga","logInSaga","logOutSaga","handleLogInOut","deleteUser","addUser","editUser","manageUserSaga","rootSaga","getPhones","fetch","headers","Accept","redirect","then","response","json","data","phones","catch","e","console","log","toString","delay","call","put","takeEvery","localStorage","setItem","removeItem","updatedUser","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","PublicRoute","Component","component","restricted","rest","useSelector","render","props","to","pathname","PrivateRoute","SignIn","useForm","register","handleSubmit","watch","errors","formState","emailValue","dispatch","useDispatch","onSubmit","className","validate","required","value","length","isCorrect","test","placeholder","capital","search","small","digits","password","Book","sort","a","b","name","last","localeCompare","deleteHandler","map","i","slice","first","onClick","Home","handleLogout","User","useParams","person","useMemo","find","u","isActive","age","company","address","registered","EditForm","params","reset","isSubmitSuccessful","useEffect","firstName","lastName","status","firstNameValue","lastNameValue","statusValue","ageValue","companyValue","phoneValue","addressValue","registeredValue","updateUser","isCorrectLength","match","join","startsCorrectly","FormAdd","Date","getTime","sendUserRequest","App","getItem","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32b1e3fd.chunk.js","sourcesContent":["export const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\n\nexport const ROUTES = {\n  main: '/',\n  home: '/home',\n  login: '/login',\n  add: '/add',\n  projectName: '/phone_book', // webstorm adds it\n  dynamic: {\n    phone: (personId = ':personId') => `/${personId}`,\n    edit: (id = ':id') => `/edit/${id}`,\n  },\n};\n\nexport const GET_USERS_REQUESTED = 'GET_USERS_REQUESTED';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';\n\nexport const SEND_USER_REQUESTED = 'SEND_USER_REQUESTED';\nexport const SEND_USER_SUCCESS = 'SEND_USER_SUCCESS';\nexport const SEND_USER_FAILED = 'SEND_USER_FAILED';\n\nexport const UPDATE_USER_REQUESTED = 'UPDATE_USER_REQUESTED';\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_FAILED = 'UPDATE_USER_FAILED';\n\nexport const DELETE_USER_REQUESTED = 'DELETE_USER_REQUESTED';\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_FAILED = 'DELETE_USER_FAILED';\n","import { Reducer } from 'redux';\nimport {\n  DELETE_USER_FAILED,\n  DELETE_USER_REQUESTED,\n  DELETE_USER_SUCCESS,\n  GET_USERS_FAILED,\n  GET_USERS_REQUESTED,\n  GET_USERS_SUCCESS,\n  SEND_USER_REQUESTED,\n  SEND_USER_SUCCESS,\n  UPDATE_USER_REQUESTED,\n} from '../constants';\nimport { IPerson } from '../../containers/App';\n\nconst initialStateFetch: UsersReturnType = {\n  users: [],\n  loading: false,\n  error: null,\n  isMakingRequest: false,\n};\n\nexport type UsersArgsType = {\n  type:\n    | typeof GET_USERS_SUCCESS\n    | typeof GET_USERS_FAILED\n    | typeof GET_USERS_REQUESTED\n    | typeof DELETE_USER_REQUESTED\n    | typeof DELETE_USER_SUCCESS\n    | typeof DELETE_USER_FAILED\n    | typeof SEND_USER_REQUESTED\n    | typeof SEND_USER_SUCCESS\n    | typeof UPDATE_USER_REQUESTED;\n  users?: Array<IPerson>;\n  message?: string;\n  userId?: any;\n  newUser?: object;\n};\n\ntype UsersReturnType = {\n  loading?: boolean;\n  users?: Array<IPerson>;\n  error?: string | null;\n  isMakingRequest?: boolean;\n};\n\nexport const users: Reducer<UsersReturnType, UsersArgsType> = (state = initialStateFetch, action): UsersReturnType => {\n  switch (action.type) {\n    case GET_USERS_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.users,\n      };\n\n    case GET_USERS_FAILED:\n      return {\n        ...state,\n        loading: false,\n        error: action.message,\n      };\n\n    case SEND_USER_REQUESTED:\n      return {\n        ...state,\n        isMakingRequest: true,\n      };\n    case SEND_USER_SUCCESS:\n      let users1: Array<IPerson> | any[] = state.users || [];\n      return {\n        ...state,\n        users: [...users1, action.newUser],\n        isMakingRequest: false,\n      };\n    case UPDATE_USER_REQUESTED:\n      return {\n        ...state,\n        isMakingRequest: true,\n      };\n    case DELETE_USER_REQUESTED:\n      return {\n        ...state,\n        isMakingRequest: true,\n      };\n    case DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        users: state.users?.filter((user: any) => user.id !== action.userId),\n        isMakingRequest: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\nimport { LOG_IN_REQUEST, LOG_IN_FAILED, LOG_IN_SUCCESS, LOG_OUT, LOG_OUT_SUCCESS } from '../constants';\nexport const initialStateLogUser: LogUserReturnType = {\n  isLogged: false,\n  isLoading: false,\n  email: '',\n  error: null,\n};\n\nexport type LogUserArgsType = {\n  type: typeof LOG_IN_REQUEST | typeof LOG_IN_SUCCESS | typeof LOG_IN_FAILED | typeof LOG_OUT | typeof LOG_OUT_SUCCESS;\n  error: null | string;\n  message: string;\n};\n\ntype LogUserReturnType = {\n  isLogged?: boolean;\n  isLoading?: boolean;\n  isLeaving?: boolean;\n  email: string;\n  error?: null | string;\n};\n\nexport const logUser: Reducer<LogUserReturnType, LogUserArgsType> = (\n  state = initialStateLogUser,\n  action\n): LogUserReturnType => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isLogged: true,\n      };\n    case LOG_IN_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        isLogged: false,\n        error: action.message,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLogged: false,\n        isLeaving: true,\n      };\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        isLeaving: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { users } from './reducers/users';\nimport { logUser } from './reducers/logUser';\nexport const rootReducer = combineReducers({\n  logUser,\n  users,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {\n  DELETE_USER_FAILED,\n  DELETE_USER_REQUESTED,\n  DELETE_USER_SUCCESS,\n  GET_USERS_FAILED,\n  GET_USERS_REQUESTED,\n  GET_USERS_SUCCESS,\n  LOG_IN_FAILED,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT,\n  LOG_OUT_SUCCESS,\n  SEND_USER_FAILED,\n  SEND_USER_REQUESTED,\n  SEND_USER_SUCCESS,\n  UPDATE_USER_FAILED,\n  UPDATE_USER_REQUESTED,\n  UPDATE_USER_SUCCESS,\n} from './constants';\nimport { IPerson } from '../containers/App';\n\nexport type LogInRequestType = {\n  type: typeof LOG_IN_REQUEST;\n};\nexport type LogInSuccessType = {\n  type: typeof LOG_IN_SUCCESS;\n};\ntype LogInFailedType = {\n  type: typeof LOG_IN_FAILED;\n  message: string | undefined;\n};\nexport type LogOutType = {\n  type: typeof LOG_OUT;\n  isLeaving: boolean;\n};\nexport type LogOutSuccessType = {\n  type: typeof LOG_OUT_SUCCESS;\n  isLeaving: boolean;\n};\n\ntype GetUsersType = {\n  type: typeof GET_USERS_REQUESTED;\n  currentUsers?: Array<IPerson>;\n};\ntype GetUsersSuccessType = {\n  type: typeof GET_USERS_SUCCESS;\n  users: Array<IPerson>;\n};\ntype GetUsersFailedType = {\n  type: typeof GET_USERS_FAILED;\n  message: string | undefined;\n};\n\nexport type SendUserType = {\n  type: typeof SEND_USER_REQUESTED;\n  newUser: IPerson;\n};\n\ntype SendUserSuccessType = {\n  type: typeof SEND_USER_SUCCESS;\n  newUser: IPerson;\n};\n\ntype SendUserFailedType = {\n  type: typeof SEND_USER_FAILED;\n  message: string | undefined;\n};\n\nexport type UpdateUserType = {\n  type: typeof UPDATE_USER_REQUESTED;\n  userId: string;\n  updatedUser: IPerson;\n};\n\ntype UpdateUserSuccessType = {\n  type: typeof UPDATE_USER_SUCCESS;\n};\n\ntype UpdateUserFailedType = {\n  type: typeof UPDATE_USER_FAILED;\n  message: string | undefined;\n};\n\nexport type DeleteUserType = {\n  type: typeof DELETE_USER_REQUESTED;\n  userId: string;\n};\n\ntype DeleteUserSuccessType = {\n  type: typeof DELETE_USER_SUCCESS;\n  userId: string;\n};\n\ntype DeleteUserFailedType = {\n  type: typeof DELETE_USER_FAILED;\n  message: string | undefined;\n};\n\nexport type ActionsType =\n  | LogInRequestType\n  | LogInSuccessType\n  | LogInFailedType\n  | LogOutType\n  | LogOutSuccessType\n  | GetUsersType\n  | GetUsersSuccessType\n  | GetUsersFailedType\n  | SendUserType\n  | SendUserSuccessType\n  | SendUserFailedType\n  | UpdateUserType\n  | UpdateUserSuccessType\n  | UpdateUserFailedType\n  | DeleteUserType\n  | DeleteUserSuccessType\n  | DeleteUserFailedType;\n\nexport type ErrorObject = {\n  message?: string;\n  name?: string;\n  fileName?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n  stack?: string;\n  description?: string;\n  number?: number;\n};\n\nexport const logInRequest = (email = ''): ActionsType => ({ type: LOG_IN_REQUEST }); //called in components, saga listens\nexport const logInSuccess = (): ActionsType => ({ type: LOG_IN_SUCCESS });\nexport const logInFailed = (e: ErrorObject): ActionsType => ({ type: LOG_IN_FAILED, message: e.message });\nexport const logOut = (): ActionsType => ({ type: LOG_OUT, isLeaving: true });\nexport const logOutSuccess = (): ActionsType => ({ type: LOG_OUT_SUCCESS, isLeaving: false });\n\nexport const getUsers = (): ActionsType => ({ type: GET_USERS_REQUESTED });\nexport const getUsersSuccess = (users: Array<IPerson>): ActionsType => ({ type: GET_USERS_SUCCESS, users: users });\nexport const getUsersFailed = (e: ErrorObject): ActionsType => ({ type: GET_USERS_FAILED, message: e.message });\n\nexport const sendUserRequest = (newUser: IPerson): ActionsType => ({ type: SEND_USER_REQUESTED, newUser: newUser });\nexport const sendUserSuccess = (newUser: IPerson): ActionsType => ({ type: SEND_USER_SUCCESS, newUser: newUser });\nexport const sendUserFailed = (e: ErrorObject): ActionsType => ({ type: SEND_USER_FAILED, message: e.message });\n\nexport const updateUser = (id: string, updatedUser: IPerson): ActionsType => ({\n  type: UPDATE_USER_REQUESTED,\n  userId: id,\n  updatedUser: updatedUser,\n});\nexport const updateUsersSuccess = (): ActionsType => ({ type: UPDATE_USER_SUCCESS });\nexport const updateUsersFailed = (e: ErrorObject): ActionsType => ({ type: UPDATE_USER_FAILED, message: e.message });\n\nexport const deleteUser = (id: string): ActionsType => ({ type: DELETE_USER_REQUESTED, userId: id });\nexport const deleteUsersSuccess = (id: string): ActionsType => ({ type: DELETE_USER_SUCCESS, userId: id });\nexport const deleteUsersFailed = (e: ErrorObject): ActionsType => ({ type: DELETE_USER_FAILED, message: e.message });\n","const TOKEN_KEY = 'current user';\n\nexport const loginToStorage = (): void => {\n  localStorage.setItem(TOKEN_KEY, 'some email');\n};\n\nexport const logoutOfStorage = (): void => {\n  localStorage.removeItem(TOKEN_KEY);\n};\n\nexport const isInStorage = (): boolean => {\n  if (localStorage.getItem(TOKEN_KEY)) {\n    return true;\n  }\n  return false;\n};\n","import { put, takeEvery, all, call, delay } from 'redux-saga/effects';\nimport {\n  LOG_IN_REQUEST,\n  LOG_OUT,\n  DELETE_USER_REQUESTED,\n  SEND_USER_REQUESTED,\n  LOG_IN_SUCCESS,\n  UPDATE_USER_REQUESTED,\n} from './constants';\nimport {\n  logInSuccess,\n  logInFailed,\n  getUsersSuccess,\n  getUsersFailed,\n  deleteUsersSuccess,\n  sendUserSuccess,\n  LogInSuccessType,\n  LogInRequestType,\n  LogOutType,\n  DeleteUserType,\n  SendUserType,\n  UpdateUserType,\n  logOutSuccess,\n} from './actions';\nimport { loginToStorage, logoutOfStorage } from '../utils';\nimport {} from './constants';\n\nconst URL = 'http://localhost:3000/phones.json';\nconst getPhones = () => {\n  return fetch(URL, {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      redirect: 'error',\n    },\n  })\n    .then(response => response.json())\n    .then(data => data.phones)\n    .catch(e => {\n      console.log('some error', e.toString());\n    });\n};\n\nfunction* fetchUsers(action: LogInSuccessType): any {\n  //Since a generator function can technically return a dynamic value depending on how next() is called, Redux-Saga had decided it best to use type any rather than try to infer a type.\n  try {\n    yield delay(1000);\n    const users = yield call(getPhones);\n    yield put(getUsersSuccess(users)); //put === dispatch(action.type, payload)\n  } catch (e) {\n    yield put(getUsersFailed(e));\n  }\n}\n\nfunction* userSaga(): any {\n  //watcher\n  yield takeEvery(LOG_IN_SUCCESS, fetchUsers); //listens to action with action.type GET_USERS_REQUESTED,  and when it is called calls function  fetchUsers\n} //action is still being dispatched  //pass LOG_IN_SUCCESS action as arg to fetchUsers worker\n\nfunction* logInSaga(action: LogInRequestType): any {\n  try {\n    yield delay(1000);\n    loginToStorage();\n    yield put(logInSuccess());\n  } catch (e) {\n    yield put(logInFailed(e));\n  }\n}\nfunction* logOutSaga(action: LogOutType): any {\n  yield delay(1000);\n  logoutOfStorage();\n  yield put(logOutSuccess());\n}\n\nfunction* handleLogInOut(): any {\n  //watcher\n  yield takeEvery(LOG_IN_REQUEST, logInSaga);\n  yield takeEvery(LOG_OUT, logOutSaga);\n}\n\nfunction* deleteUser(action: DeleteUserType): any {\n  try {\n    yield delay(1000);\n    yield put(deleteUsersSuccess(action.userId));\n  } catch (e) {}\n}\n\nfunction* addUser(action: SendUserType): any {\n  try {\n    yield delay(1000);\n    yield put(sendUserSuccess(action.newUser));\n  } catch (e) {}\n}\nfunction* editUser(action: UpdateUserType): any {\n  try {\n    yield delay(1000);\n    yield put(deleteUsersSuccess(action.userId));\n    yield put(sendUserSuccess(action.updatedUser));\n  } catch (e) {}\n}\n\nfunction* manageUserSaga(): any {\n  //watcher\n  yield takeEvery(DELETE_USER_REQUESTED, deleteUser);\n  yield takeEvery(SEND_USER_REQUESTED, addUser);\n  yield takeEvery(UPDATE_USER_REQUESTED, editUser);\n}\n\nexport default function* rootSaga(): any {\n  yield all([\n    userSaga(), //fetch\n    handleLogInOut(),\n    manageUserSaga(),\n  ]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './rootReducer';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n\nexport const sagaAction = (type: any) => store.dispatch({ type }); //saga\n\nexport default store;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ROUTES } from '../redux/constants';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../redux/rootReducer';\ntype PublicRouteProps = {\n  component: any;\n  restricted: boolean;\n  path: string;\n  exact: boolean;\n};\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }: PublicRouteProps): React.ReactElement => {\n  const state = useSelector((state: RootState) => state);\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        state.logUser.isLogged && restricted ? <Redirect to={{ pathname: ROUTES.main }} /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ROUTES } from '../redux/constants';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../redux/rootReducer';\n\ntype PrivateRouteProps = {\n  component: any;\n  path: string;\n  exact?: boolean;\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }: PrivateRouteProps): React.ReactElement => {\n  const state = useSelector((state: RootState) => state);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        state.logUser.isLogged ? <Component {...props} /> : <Redirect to={{ pathname: ROUTES.login }} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { FC } from 'react';\nimport { logInRequest } from '../redux/actions';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/rootReducer';\nexport const SignIn: FC = (): React.ReactElement => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const emailValue = watch('email');\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state: RootState) => state.logUser.isLoading);\n  const handleLogin = (): void => {\n    dispatch(logInRequest(emailValue)); // saga watcher listens\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(handleLogin)} className='form'>\n        {' '}\n        {/* your form submit function which will invoke after successful validation*/}\n        {/* register your input into the hook by invoking the \"register\" function */}\n        <input\n          {...register('email', {\n            //name=== errors obj property containing all validation errors for this specific field\n            validate: {\n              required: value => value.length || 'This field is required', //so validation need to return false to be passed\n              isCorrect: value => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) || 'Invalid email address',\n            },\n          })}\n          className='form__field'\n          placeholder='email'\n        />\n        {/* errors will return when field validation fails  */}\n        {errors.email && <span>{errors.email?.message}</span>}{' '}\n        {/*errors.email?.message - one entity for all possible messages*/}\n        {/* include validation with required or other standard HTML validation rules */}\n        <input\n          {...register('password', {\n            validate: {\n              required: value => value.length || 'This field is required',\n              length: value => value.length > 8 || 'Needs at least 8 symbols',\n              capital: value => value.search(/[A-Z]/) !== -1 || 'Must contain at least 1 capital letter',\n              small: value => value.search(/[a-z]/) !== -1 || 'Must contain at least 1 small letter',\n              digits: value => value.search(/[0-9]/) !== -1 || 'Must contain at least 1 digit',\n            },\n          })}\n          className='form__field'\n          type='password'\n          placeholder='password'\n        />\n        {errors.password && <span>{errors.password?.message}</span>}\n        <input type='submit' className='form__button' />\n      </form>\n      {isLoading ? (\n        <div className='dialog'>\n          <div className='dialog__overlay'>\n            <div className='dialog__window'>\n              <p className='dialog__msg'>Getting access...</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { IPerson } from '../containers/App';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteUser } from '../redux/actions';\nimport { ROUTES } from '../redux/constants';\nimport { RootState } from '../redux/rootReducer';\n\nconst Book: FC = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const phones = useSelector((state: RootState) =>\n    state.users.users?.sort((a: IPerson, b: IPerson) => a.name.last.localeCompare(b.name.last))\n  );\n\n  const loading = useSelector((state: RootState) => state.users.loading);\n  const isMakingRequest = useSelector((state: RootState) => state?.users.isMakingRequest);\n\n  const deleteHandler: any = (e: any, id: any): void => {\n    dispatch(deleteUser(id));\n  };\n\n  return (\n    <>\n      <main className='main'>\n        <div className='bg'>\n          <div className='container'>\n            <Link to={{ pathname: ROUTES.home }} className='main__link'>\n              Go home\n            </Link>\n          </div>\n        </div>\n        <div className='container'>\n          <Link to={ROUTES.add} className='form__button'>\n            Add user\n          </Link>\n\n          {loading ? (\n            <p>Wait for it...</p>\n          ) : (\n            <ul>\n              {phones?.map(({ id, name, phone }: IPerson, i: number) => {\n                if (phones[i - 1]?.name.last.slice(0, 1) !== phones[i]?.name.last.slice(0, 1)) {\n                  return (\n                    <li key={id} className='withSeparator'>\n                      <p>{phones[i].name.last.slice(0, 1)} </p>\n                      <ul className='firstInRow'>\n                        <li className='name'>\n                          <Link to={`/${id}`}>\n                            {name.last} {name.first}\n                          </Link>\n                          <button onClick={e => deleteHandler(e, id)} type='button' className='form__button'>\n                            Delete user{' '}\n                          </button>\n                        </li>\n                      </ul>\n                    </li>\n                  );\n                } else {\n                  return (\n                    <>\n                      <li key={id} className='name'>\n                        <Link to={`/${id}`}>\n                          {name.last} {name.first}\n                        </Link>\n                        <button onClick={e => deleteHandler(e, id)} type='button' className='form__button'>\n                          Delete user{' '}\n                        </button>\n                      </li>\n                    </>\n                  );\n                }\n              })}\n            </ul>\n          )}\n        </div>\n      </main>\n      {isMakingRequest ? (\n        <div className='dialog'>\n          <div className='dialog__overlay'>\n            <div className='dialog__window'>\n              <p className='dialog__msg'>Removing user...</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default Book;\n","import React, { FC } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { logOut } from '../redux/actions';\nimport { ROUTES } from '../redux/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/rootReducer';\n\nconst Home: FC = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const isMakingRequest = useSelector((state: RootState) => state.logUser.isLeaving);\n\n  const handleLogout = (): void => {\n    dispatch(logOut()); // saga watcher listens\n  };\n  const state = useSelector((state: RootState) => state);\n  return (\n    <>\n      <div className='home-page'>\n        <div className='container'>\n          <h1>Home</h1>\n          {state.logUser.isLogged ? (\n            <button className='home-page__button' onClick={() => handleLogout()}>\n              Click here to log out\n            </button>\n          ) : (\n            <Link className='home-page__button' to={{ pathname: ROUTES.login }}>\n              Go to sign in page\n            </Link>\n          )}\n        </div>\n      </div>\n      {isMakingRequest ? (\n        <div className='dialog'>\n          <div className='dialog__overlay'>\n            <div className='dialog__window'>\n              <p className='dialog__msg'>See you soon! </p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import React, { FC, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../redux/rootReducer';\nimport { Link, useParams } from 'react-router-dom';\n\nconst User: FC = (): React.ReactElement => {\n  const { personId } = useParams<{ personId: string }>();\n  const users = useSelector((state: RootState) => state.users.users);\n  const person = useMemo(() => users?.find(u => u.id === personId), [users, personId]);\n  return person ? (\n    <>\n      <div className='container'>\n        <Link to={`/edit/:${person.id}`} className='form__button'>\n          Edit user{' '}\n        </Link>\n        <div className='person'>\n          <h1>\n            {person.name.first} {person.name.last}\n          </h1>\n          <p>\n            <span className='person__info-title'>id: </span>\n            <span className='person__info-description'>{person.id}</span>\n          </p>\n          <p>\n            <span className='person__info-title'>Status: </span>\n            <span className='person__info-description'>{person.isActive ? `active` : `not active`}</span>\n          </p>\n          <p>\n            <span className='person__info-title'>Age: </span>\n            <span className='person__info-description'>{person.age}</span>\n          </p>\n          <p>\n            <span className='person__info-title'>Company: </span>\n            <span className='person__info-description'>{person.company}</span>\n          </p>\n          <p>\n            <span className='person__info-title'>Email: </span>\n            <span className='person__info-description'>{person.email}</span>\n          </p>\n          <p>\n            <span className='person__info-title'>Phone: </span>\n            <span className='person__info-description'>{person.phone}</span>\n          </p>\n          <p>\n            <span className='person__info-title'>Address: </span>\n            <span className='person__info-description'>{person.address}</span>\n          </p>\n          <p>\n            <span className='person__info-title'>Registered: </span>\n            <span className='person__info-description'>{person.registered}</span>\n          </p>\n        </div>\n      </div>\n    </>\n  ) : (\n    <h1>Sorry, something went wrong</h1>\n  );\n};\n\nexport default User;\n","import React, { FC, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUser } from '../redux/actions';\nimport { RootState } from '../redux/rootReducer';\n\nconst EditForm: FC = (): React.ReactElement => {\n  const params = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n  const isMakingRequest = useSelector((state: RootState) => state?.users.isMakingRequest);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm();\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset({\n        firstName: '',\n        lastName: '',\n        status: 'active',\n        age: '',\n        company: '',\n        email: '',\n        phone: '',\n        address: '',\n        registered: '',\n      });\n    }\n  }, [isSubmitSuccessful, reset]);\n\n  const firstNameValue = watch('firstName');\n  const lastNameValue = watch('lastName');\n  const statusValue = watch('status');\n  const ageValue = watch('age');\n  const companyValue = watch('company');\n  const emailValue = watch('email');\n  const phoneValue = watch('phone');\n  const addressValue = watch('address');\n  const registeredValue = watch('registered');\n\n  const updatedUser = {\n    id: params.id.slice(1),\n    isActive: statusValue === 'active' ? true : false,\n    age: ageValue,\n    name: {\n      first: firstNameValue,\n      last: lastNameValue,\n    },\n    company: companyValue,\n    email: emailValue,\n    phone: phoneValue,\n    address: addressValue,\n    registered: registeredValue,\n  };\n  const editHandler = () => {\n    dispatch(updateUser(params.id.slice(1), updatedUser));\n  };\n\n  return (\n    <>\n      <div className='container'>\n        <form onSubmit={handleSubmit(editHandler)} className='edit-form'>\n          <p className='edit-form__title'>Edit profile</p>\n\n          <input type='text' placeholder='First name' className='add-form__field' {...register('firstName', {})} />\n\n          <input type='text' placeholder='Last name' className='add-form__field' {...register('lastName', {})} />\n\n          <select className='add-form__field' {...register('status')}>\n            <option value='active'>active</option>\n            <option value='not active'>not active</option>\n          </select>\n\n          <input\n            type='number'\n            placeholder='Age'\n            className='add-form__field'\n            {...register('age', {\n              validate: {\n                required: value => value.length || 'This field is required',\n                isCorrect: value => (+value >= 1 && +value <= 120) || 'Your age must be 1 to 120 years',\n              },\n            })}\n          />\n          {errors.age?.message && <span>{errors.age?.message}</span>}\n\n          <input type='text' placeholder='Company' className='add-form__field' {...register('company', {})} />\n\n          <input\n            type='text'\n            placeholder='Email'\n            className='add-form__field'\n            {...register('email', {\n              validate: {\n                required: value => value.length || 'This field is required',\n                isCorrect: value => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) || 'Invalid email address',\n              },\n            })}\n          />\n          {errors.email?.message && <span>{errors.email?.message}</span>}\n\n          <input\n            type='text'\n            placeholder='Phone'\n            className='add-form__field'\n            {...register('phone', {\n              validate: {\n                required: value => value.length || 'This field is required',\n                isCorrectLength: value =>\n                  value.match(/[0-9]/g).join('').length !== 11 || 'Phone number must contain 11 digits',\n                startsCorrectly: value =>\n                  value.slice(0, 1) === '1' || value.slice(1, 2) === '1' || 'Phone number must start with 1',\n              },\n            })}\n          />\n          {errors.phone?.message && <span>{errors.phone?.message}</span>}\n\n          <input type='text' placeholder='Address' className='add-form__field' {...register('address', {})} />\n\n          <input type='text' placeholder='Registered' className='add-form__field' {...register('registered', {})} />\n\n          <button\n            className='form__button'\n            //type=\"button\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n      {isMakingRequest ? (\n        <div className='dialog'>\n          <div className='dialog__overlay'>\n            <div className='dialog__window'>\n              <p className='dialog__msg'>Sending data...</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\nexport default EditForm;\n","import React, { FC, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendUserRequest } from '../redux/actions';\nimport { RootState } from '../redux/rootReducer';\n\nconst FormAdd: FC = (): React.ReactElement => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm();\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset({\n        firstName: '',\n        lastName: '',\n        status: 'active',\n        age: '',\n        company: '',\n        email: '',\n        phone: '',\n        address: '',\n        registered: '',\n      });\n    }\n  }, [isSubmitSuccessful, reset]);\n  const dispatch = useDispatch();\n\n  const isMakingRequest = useSelector((state: RootState) => state?.users.isMakingRequest);\n\n  const firstNameValue = watch('firstName');\n  const lastNameValue = watch('lastName');\n  const statusValue = watch('status');\n  const ageValue = watch('age');\n  const companyValue = watch('company');\n  const emailValue = watch('email');\n  const phoneValue = watch('phone');\n  const addressValue = watch('address');\n  const registeredValue = watch('registered');\n\n  const handleAdd = (): void => {\n    const newUser = {\n      id: new Date().getTime().toString(),\n      isActive: statusValue === 'active' ? true : false,\n      age: ageValue,\n      name: {\n        first: firstNameValue,\n        last: lastNameValue,\n      },\n      company: companyValue,\n      email: emailValue,\n      phone: phoneValue,\n      address: addressValue,\n      registered: registeredValue,\n    };\n    //console.log(newUser)\n    dispatch(sendUserRequest(newUser));\n  };\n  return (\n    <>\n      <div className='container'>\n        <form className='add-form' onSubmit={handleSubmit(handleAdd)}>\n          <input type='text' placeholder='First name' className='add-form__field' {...register('firstName', {})} />\n\n          <input type='text' placeholder='Last name' className='add-form__field' {...register('lastName', {})} />\n\n          <select className='add-form__field' {...register('status')}>\n            <option value='active'>active</option>\n            <option value='not active'>not active</option>\n          </select>\n\n          <input\n            type='number'\n            placeholder='Age'\n            className='add-form__field'\n            {...register('age', {\n              validate: {\n                required: value => value.length || 'This field is required',\n                isCorrect: value => (+value >= 1 && +value <= 120) || 'Your age must be 1 to 120 years',\n              },\n            })}\n          />\n          {errors.age?.message && <span>{errors.age?.message}</span>}\n\n          <input type='text' placeholder='Company' className='add-form__field' {...register('company', {})} />\n\n          <input\n            type='text'\n            placeholder='Email'\n            className='add-form__field'\n            {...register('email', {\n              validate: {\n                required: value => value.length || 'This field is required',\n                isCorrect: value => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) || 'Invalid email address',\n              },\n            })}\n          />\n          {errors.email?.message && <span>{errors.email?.message}</span>}\n\n          <input\n            type='text'\n            placeholder='Phone'\n            className='add-form__field'\n            {...register('phone', {\n              validate: {\n                required: value => value.length || 'This field is required',\n                isCorrectLength: value =>\n                  value.match(/[0-9]/g).join('').length !== 11 || 'Phone number must contain 11 digits',\n                startsCorrectly: value =>\n                  value.slice(0, 1) === '1' || value.slice(1, 2) === '1' || 'Phone number must start with 1',\n              },\n            })}\n          />\n          {errors.phone?.message && <span>{errors.phone?.message}</span>}\n\n          <input type='text' placeholder='Address' className='add-form__field' {...register('address', {})} />\n\n          <input type='text' placeholder='Registered' className='add-form__field' {...register('registered', {})} />\n\n          <button type='submit' className='form__button'>\n            Submit\n          </button>\n        </form>\n      </div>\n      {isMakingRequest ? (\n        <div className='dialog'>\n          <div className='dialog__overlay'>\n            <div className='dialog__window'>\n              <p className='dialog__msg'>Sending data...</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\nexport default FormAdd;\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport PublicRoute from '../components/PublicRoute';\nimport PrivateRoute from '../components/PrivateRoute';\nimport { SignIn } from '../components/SignIn';\nimport { isInStorage } from '../utils';\nimport Book from '../components/Book';\nimport Home from '../components/Home';\nimport User from '../components/User';\nimport EditForm from '../components/EditForm';\nimport FormAdd from '../components/FormAdd';\nimport { ROUTES } from '../redux/constants';\nimport { logInRequest } from '../redux/actions';\ninterface IName {\n  first: string;\n  last: string;\n}\n\nexport interface IPerson {\n  id: string;\n  isActive: boolean;\n  age?: number;\n  name: IName;\n  company?: string;\n  email?: string;\n  phone: string;\n  address?: string;\n  registered: string;\n}\n\nconst App = (): React.ReactElement => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isInStorage()) {\n      dispatch(logInRequest()); // saga watcher listens\n    }\n  }, [dispatch]);\n  return (\n    <>\n      <Switch>\n        <PrivateRoute component={FormAdd} path={ROUTES.add} />\n        <PrivateRoute component={EditForm} path={ROUTES.dynamic.edit()} />\n        <PrivateRoute component={Book} path={ROUTES.main} exact />\n        <PublicRoute restricted={false} component={Home} path={ROUTES.home} exact />\n        <PublicRoute restricted={true} component={SignIn} path={ROUTES.login} exact />\n        <PrivateRoute component={User} path={ROUTES.dynamic.phone()} exact />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}