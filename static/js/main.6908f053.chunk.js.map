{"version":3,"sources":["constants.ts","reducers.ts","utils/index.ts","sagas.js","store.js","components/PublicRoute.tsx","components/PrivateRoute.tsx","components/SignIn.tsx","actions.ts","components/Book.tsx","containers/Home.tsx","containers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LOG_IN","LOG_OUT","ROUTES","GET_USERS_SUCCESS","GET_USERS_FAILED","initialStateLogUser","isLogged","initialStateFetch","users","loading","error","rootReducer","combineReducers","logUser","state","action","type","message","TOKEN_KEY","isInStorage","localStorage","getItem","fetchUsers","userSaga","rootSaga","getPhones","fetch","headers","Accept","then","response","json","data","catch","e","console","log","toString","call","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","logger","run","PublicRoute","Component","component","restricted","rest","render","props","to","pathname","PrivateRoute","getState","SignIn","history","useHistory","useForm","register","handleSubmit","watch","errors","formState","emailValue","dispatch","useDispatch","onSubmit","email","payload","setItem","push","className","validate","required","value","length","isCorrect","test","capital","search","small","digits","password","Book","phones","useSelector","sort","a","b","name","last","localeCompare","useEffect","map","i","id","phone","slice","first","Home","handleLogout","removeItem","onClick","connect","form","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6908f053.chunk.js","sourcesContent":["export const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const GET_PHONES = 'GET_PHONES';\n\nexport const ROUTES = {\n    main: '/',\n    home: '/home',\n    login: '/login',\n    projectName: '/phone_book' // webstorm adds it\n}\n\nexport const GET_USERS_REQUESTED = 'GET_USERS_REQUESTED';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';","import { combineReducers } from 'redux';\nimport { LOG_IN, LOG_OUT, GET_PHONES } from './constants';\nimport {GET_USERS_REQUESTED, GET_USERS_SUCCESS, GET_USERS_FAILED} from \"./constants\";\n\nexport const initialStateLogUser = {\n  isLogged: false,\n};\n\nexport const logUser = (state = initialStateLogUser, action: any) => {\n  switch (action.type) {\n    case LOG_IN:\n      return {\n        ...state,\n        isLogged: true,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLogged: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialStateFetch = {\n  users: [],\n  loading: false,\n  error: null,\n}\n\nexport function users(state = initialStateFetch, action: any) {\n  switch (action.type) {\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.users\n      }\n    case GET_USERS_FAILED:\n      return {\n        ...state,\n        loading: false,\n        error: action.message,\n      }\n    default:\n      return state\n  }\n}\n\nexport const rootReducer = combineReducers({\n  logUser,\n  users,\n});","const TOKEN_KEY = 'current user';\n\nexport const loginToStorage = (email: string): void => {\n  localStorage.setItem(TOKEN_KEY, email);\n};\n\nexport const logoutOfStorage = (): void => {\n  localStorage.removeItem(TOKEN_KEY);\n};\n\nexport const isInStorage = (): boolean => {\n  if (localStorage.getItem(TOKEN_KEY)) {\n    return true;\n  }\n  return false;\n};\n","import { put, takeEvery, all, call } from 'redux-saga/effects'\nimport {GET_PHONES} from \"./constants\";\nimport {logIn} from \"./actions\";\nimport {loginToStorage} from \"./utils\";\n\n\nconst URL = 'http://localhost:3000/phones.json';\n const getPhones = () => {\n        return fetch(URL, {\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n            },\n        })\n            .then(response => response.json())\n            .then(data => data)\n            .catch(e => {\n                console.log(e.toString());\n            });\n};\n\nfunction* fetchUsers(action) {\n    try {\n        const users = yield call(getPhones);\n        yield put({type: 'GET_USERS_SUCCESS', users: users}); //put === dispatch\n    } catch (e) {\n        yield put({type: 'GET_USERS_FAILED', message: e.message});\n    }\n}\nfunction* userSaga() {\n    yield takeEvery('GET_USERS_REQUESTED', fetchUsers);\n}\n\n\nexport default function* rootSaga() {\n    yield all([\n        userSaga() //fetch\n    ])\n}","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {logger} from \"redux-logger/src\";\nimport { rootReducer} from './reducers';\n\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './sagas'\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(logger, sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n\nexport const sagaAction = type => store.dispatch({type}) //saga\n\nexport default store;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isInStorage } from '../utils';\nimport {ROUTES} from \"../constants\";\ntype PublicRouteProps = {\n  component: any;\n  restricted: any;\n  path: string;\n  exact: boolean;\n};\nconst PublicRoute = ({ component: Component, restricted, ...rest }: PublicRouteProps): React.ReactElement => {\n  return (\n    <Route\n      {...rest}\n      render={props => (isInStorage() && restricted ? <Redirect to={{pathname: ROUTES.main}} /> : <Component {...props} />)}\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { IPerson } from '../containers/App';\nimport store from \"../store\";\nimport {ROUTES} from '../constants'\n\ntype PrivateRouteProps = {\n  component: any;\n  path: string;\n  exact: boolean;\n};\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}: PrivateRouteProps): React.ReactElement => {\n    const state: any = store.getState();\n  return (\n    <Route\n      {...rest}\n      render={props =>\n          state.logUser.isLogged ? (\n          <Component  {...props} />\n        ) : (\n          <Redirect to={{pathname: ROUTES.login}} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n\n","import React, {FC} from 'react'\nimport store from \"../store\";\n//import {LOG_IN} from \"../constants\";\nimport {logIn} from \"../actions\";\nimport {loginToStorage} from \"../utils\";\nimport {useForm} from \"react-hook-form\";\nimport {ROUTES} from \"../constants\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\"\n\nexport const SignIn:FC = (props: any) => {\n\n    const history = useHistory();\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const emailValue = watch(\"email\");\n    const dispatch = useDispatch();\n    //was props: RouteComponentProps\n    const handleLogin = () => {\n        dispatch(logIn());\n        loginToStorage(emailValue);\n        history.push(ROUTES.main);\n    }\n\n    return (\n        <form onSubmit={handleSubmit(handleLogin)} className=\"form\"> {/* your form submit function which will invoke after successful validation*/}\n            {/* register your input into the hook by invoking the \"register\" function */}\n            <input\n                {...register(\"email\", { //name=== errors obj property containing all validation errors for this specific field\n                    validate: {\n                        required: value => value.length || 'This field is required', //so validation need to return false to be passed\n                        isCorrect: value => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) || 'Invalid email address'\n                    }\n                })}\n                className=\"form__field\"\n            />\n            {/* errors will return when field validation fails  */}\n            {errors.email && <span>{errors.email?.message}</span>} {/*errors.email?.message - one entity for all possible messages*/}\n            {/* include validation with required or other standard HTML validation rules */}\n            <input\n                {...register(\"password\", {\n                    validate: {\n                        required: value => value.length || 'This field is required',\n                        length: value => value.length > 8 || 'Needs at least 8 symbols',\n                        capital: value => value.search(/[A-Z]/) !== -1 || 'Must contain at least 1 capital letter',\n                        small: value => value.search(/[a-z]/) !== -1 || 'Must contain at least 1 small letter',\n                        digits: value => value.search(/[0-9]/) !== -1 || 'Must contain at least 1 digit',\n                    }\n                })}\n                className=\"form__field\"/>\n            {errors.password && <span>{errors.password?.message}</span>}\n            <input type=\"submit\" className=\"form__button\"/>\n        </form>\n    )\n}\n\n\n\n\n","import { LOG_IN, LOG_OUT, GET_USERS_REQUESTED } from './constants';\n\nexport const logIn = () => ({ type: LOG_IN, payload: true }); //dispatched in components\n\nexport const logOut = () => ({type: LOG_OUT})\n\nexport const getUsers = () => ({type: GET_USERS_REQUESTED})\n\n","import React, { useEffect } from 'react';\nimport { IPerson } from '../containers/App';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector} from \"react-redux\";\nimport {getUsers} from \"../actions\";\nimport {ROUTES} from \"../constants\";\n\ninterface BookProps {\n  phones: Array<IPerson>;\n}\n\n\nconst Book = (): React.ReactElement => {\n const dispatch = useDispatch();\n    // @ts-ignore\n const phones = useSelector(state => state.users.users.phones?.sort((a, b) => a.name.last.localeCompare(b.name.last)))\n  // @ts-ignore\n    const users = useSelector(state => state.users.users);\n    // @ts-ignore\n  const loading = useSelector(state => state.users.loading);\n    // @ts-ignore\n  const error = useSelector(state => state.users.error);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [])\n\n  return (\n    <main className='main'>\n      <div className='container'>\n        <ul>\n          {phones?.map(({ id, name, phone }: IPerson, i: number) => {\n            if (phones[i - 1]?.name.last.slice(0, 1) !== phones[i]?.name.last.slice(0, 1)) {\n              return (\n                <li key={id} className='withSeparator'>\n                  <p>{phones[i].name.last.slice(0, 1)} </p>\n                  <ul className='firstInRow'>\n                    <li>\n                      {name.last} {name.first}, phone: {phone}\n                    </li>\n                  </ul>\n                </li>\n              );\n            } else {\n              return (\n                <li key={id}>\n                  {name.last} {name.first}, phone: {phone}\n                </li>\n              );\n            }\n          })}\n        </ul>\n        <Link to={{pathname: ROUTES.home}}>Go home</Link>\n      </div>\n    </main>\n  );\n};\n\nexport default Book;\n","import React, { Component } from 'react';\nimport { logoutOfStorage,  isInStorage } from '../utils';\nimport { Link} from 'react-router-dom';\nimport store from \"../store\";\n//import {LOG_OUT} from \"../constants\";\nimport {logOut} from \"../actions\";\nimport {ROUTES} from \"../constants\";\nimport {useDispatch} from \"react-redux\";\n\n// RouteComponentProps<MatchParams>\nconst Home = () =>  {\n    const dispatch = useDispatch();\n\n  const handleLogout = (): void => {\n    logoutOfStorage();\n      dispatch(logOut());\n  };\n  const state = store.getState();\n  return (\n      <div>\n        <h1>Home</h1>\n        {state.logUser.isLogged || isInStorage()  ? (\n            <button onClick={() => handleLogout()}>Click here to log out</button>\n        ) : (\n            <Link to={{pathname: ROUTES.login}}>Go to sign in page</Link>\n        )}\n      </div>\n  );\n\n}\n\nexport default Home;\n","import React, {useEffect } from 'react';\nimport './App.css';\nimport { Redirect, Switch } from 'react-router-dom';\nimport {connect, useSelector} from 'react-redux';\nimport PublicRoute from '../components/PublicRoute';\nimport PrivateRoute from '../components/PrivateRoute';\nimport {SignIn} from '../components/SignIn';\nimport Book from '../components/Book';\nimport Home from './Home';\nimport {ROUTES} from \"../constants\";\n\ninterface IName {\n  first: string;\n  last: string;\n}\n\nexport interface IPerson {\n  id: string;\n  isActive: boolean;\n  age?: number;\n  name: IName;\n  company?: string;\n  email?: string;\n  phone: string;\n  address?: string;\n  registered: string;\n}\ninterface GlobalState {\n    logUser: ILogUser,\n    setPhones: ISetPhones,\n    counter: number,\n}\ninterface ILogUser {\n    isLogged: boolean\n}\ninterface ISetPhones {\n    phones: Array<IPerson>\n}\n\nconst mapStateToProps = (state: any) => ({\n    phones: state.users.users.phones,\n    isLogged: state.logUser.isLogged,\n    form: state.form\n});\n\n\nconst App = ({ phones }: { phones: Array<IPerson> }): React.ReactElement => {\n    const state = useSelector(state => state)\n  return (\n      <>\n        <Switch>\n          <PublicRoute restricted={false} component={Home} path={ROUTES.home} exact />\n          <PublicRoute restricted={true} component={SignIn} path={ROUTES.login} exact />\n          <PrivateRoute component={Book} path={ROUTES.main} exact  />\n          <Redirect path={ROUTES.projectName} to={{pathname: ROUTES.login}} />\n        </Switch>\n      </>\n  );\n};\n\n\n\nexport default connect(mapStateToProps)(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}