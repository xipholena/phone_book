{"version":3,"sources":["constants.js","reducers.js","store.js","utils/index.ts","components/PublicRoute.tsx","components/PrivateRoute.tsx","components/SignIn.tsx","components/Book.tsx","containers/Home.tsx","containers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LOG_IN","LOG_OUT","GET_PHONES","initialStateLogUser","isLogged","logUser","state","action","type","initialStatePhones","phones","rootReducer","combineReducers","setPhones","payload","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","TOKEN_KEY","isInStorage","localStorage","getItem","PublicRoute","Component","component","restricted","rest","getState","render","props","to","PrivateRoute","console","log","fieldLevelValidation","values","email","required","value","undefined","test","length","capital","search","small","digits","renderField","input","label","meta","touched","error","warning","placeholder","reduxForm","history","handleSubmit","reset","onSubmit","dispatch","setItem","loginToStorage","push","Field","name","validate","onClick","Book","useEffect","className","map","i","id","phone","last","slice","first","Home","handleLogout","removeItem","setState","isLogin","connect","onLogUser","onSetPhones","path","exact","SignIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b75f697.chunk.js","sourcesContent":["export const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const GET_PHONES = 'GET_PHONES';\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form'\nimport { LOG_IN, LOG_OUT, GET_PHONES } from './constants';\n\nexport const initialStateLogUser = {\n  isLogged: false, //change to false!!!\n\n};\n\nexport const logUser = (state = initialStateLogUser, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      return {\n        ...state,\n        isLogged: true,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLogged: false,\n      };\n    default:\n      return state;\n  }\n};\nexport const initialStatePhones = {\n  phones: [],\n};\nexport const setPhones = (state = initialStatePhones, action) => {\n  switch (action.type) {\n    case GET_PHONES:\n      return {\n        ...state,\n        phones: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  logUser,\n  setPhones,\n  form: formReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer, initialState } from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware()));\n\nexport default store;\n","const TOKEN_KEY = 'current user';\n\nexport const loginToStorage = (email: string): void => {\n  localStorage.setItem(TOKEN_KEY, email);\n};\n\nexport const logoutOfStorage = (/*email: string*/): void => {\n  localStorage.removeItem(TOKEN_KEY);\n};\n\nexport const isInStorage = (): boolean => {\n  if (localStorage.getItem(TOKEN_KEY)) {\n    return true;\n  }\n\n  return false;\n};\n","import React, {useEffect} from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isInStorage } from '../utils';\nimport store from \"../store\";\n\ntype PublicRouteProps = {\n  component: any;\n  restricted: any;\n  path: string;\n  exact: boolean;\n};\nconst PublicRoute = ({ component: Component, restricted, ...rest }: PublicRouteProps): React.ReactElement => {\n  const state: any = store.getState()\n  //console.log(state)\n  return (\n    <Route\n      {...rest}\n      render={props => (isInStorage() && restricted ? <Redirect to='/' /> : <Component {...props} />)}\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React, {useEffect} from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isInStorage } from '../utils';\nimport { IPerson } from '../containers/App';\nimport store from \"../store\";\n\ntype PrivateRouteProps = {\n  component: any;\n  phones: Array<IPerson>;\n  /*getPhonesHandler: any;*/\n  path: string;\n  exact: boolean;\n};\nconst PrivateRoute = ({\n  component: Component,\n  phones,\n  /*getPhonesHandler,*/\n  ...rest\n}: PrivateRouteProps): React.ReactElement => {\n    const state: any = store.getState();\n    console.log('PrivateRoute',state?.form.fieldLevelValidation?.values?.email)\n    console.log('state.logUser.isLogged', state.logUser.isLogged)\n  return (\n    <Route\n      {...rest}\n      render={props =>\n          state.logUser.isLogged ? (\n          <Component phones={phones} /*getPhonesHandler={getPhonesHandler}*/ {...props} />\n        ) : (\n          <Redirect to='/login' />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n\n","import React, {FC} from 'react'\nimport { Field, reduxForm, formValueSelector } from 'redux-form'\nimport store from \"../store\";\nimport {LOG_IN} from \"../constants\";\nimport {logIn} from \"../actions\";\nimport {loginToStorage} from \"../utils\";\n\nconst required = (value: string) => !value ? 'Please provide us your data' : undefined\nconst email = (value: string) => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? 'Invalid email address'\n    : undefined\nconst length = (value: string) => value.length < 8 ? 'Needs at least 8 symbols' : undefined\nconst capital = (value: string) => value.search(/[A-Z]/) === -1 ? 'Must contain at least 1 capital letter' : undefined\nconst small = (value: string) => value.search(/[a-z]/) === -1 ?  'Must contain at least 1 small letter': undefined\nconst digits = (value: string) => value.search(/[0-9]/) === -1 ? 'Must contain at least 1 digit' : undefined\n\nconst renderField = ({ input, label, type, meta }: any) => {\n    const { touched, error, warning } = meta;\n    //console.log(meta)\n    return (\n        <div>\n            <label>{label}</label>\n            <div>\n                <input {...input} placeholder={label} type={type}/>\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n            </div>\n        </div>\n    )\n}\n\n\n\nlet SignIn:FC = (props: any) => {\n    const { history, handleSubmit, reset, onSubmit} = props\n    const state = store.getState()\n  //  console.log('history', history)\n\n    //was props: RouteComponentProps\n    const handleLogin = () => { //dispatch logUser change action here ...?\n\n        props.dispatch({ type: LOG_IN/*, payload: true*/ })\n        console.log(store.getState())\n        loginToStorage(state.form.fieldLevelValidation?.values?.email);\n        history.push('/');\n        //console.log('values:', state.form.fieldLevelValidation?.values)\n    }\n\n    return (\n        <form onSubmit={handleSubmit(handleLogin)}>\n            <Field name=\"email\" type=\"text\"\n                   component={renderField} label=\"Email\"\n                   validate={[required, email]}\n            />\n            <Field name=\"password\" type=\"password\"\n                   component={renderField} label=\"Password\"\n                   validate={[required, length, capital, small, digits]}\n            />\n            <div>\n                <button type=\"submit\" >Submit</button>\n                <button type=\"button\" onClick={reset}>Clear Values</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'fieldLevelValidation', // a unique identifier for this form\n})(SignIn)\n","import React, { useEffect } from 'react';\nimport { IPerson } from '../containers/App';\nimport { Link } from 'react-router-dom';\n\ninterface BookProps {\n  phones: Array<IPerson>;\n  //getPhonesHandler: () => void;\n}\n\nconst Book = ({ phones /*getPhonesHandler */ }: BookProps): React.ReactElement => {\n  useEffect(() => {\n    //getPhonesHandler();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <main className='main'>\n      <div className='container'>\n        <ul>\n          {phones?.map(({ id, name, phone }: IPerson, i) => {\n            if (phones[i - 1]?.name.last.slice(0, 1) !== phones[i]?.name.last.slice(0, 1)) {\n              return (\n                <li key={id} className='withSeparator'>\n                  <p>{phones[i].name.last.slice(0, 1)} </p>\n                  <ul className='firstInRow'>\n                    <li>\n                      {name.last} {name.first}, phone: {phone}\n                    </li>\n                  </ul>\n                </li>\n              );\n            } else {\n              return (\n                <li key={id}>\n                  {name.last} {name.first}, phone: {phone}\n                </li>\n              );\n            }\n          })}\n        </ul>\n        <Link to='/home'>Go home</Link>\n      </div>\n    </main>\n  );\n};\n\nexport default Book;\n","import React, { Component } from 'react';\nimport { logoutOfStorage,  isInStorage } from '../utils';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport store from \"../store\";\n\ntype MatchParams = {\n  id: string;\n};\ntype HomeState = {\n  isLogin: boolean;\n};\nclass Home extends Component<RouteComponentProps<MatchParams>, HomeState> {\n  constructor(props: RouteComponentProps<MatchParams>) {\n    super(props);\n\n    /*this.state = {\n      isLogin: isLogin(state?.form.fieldLevelValidation?.values?.email),\n    };*/\n  }\n\n\n\n  handleLogout = (): void => {\n    logoutOfStorage() ;\n    this.setState({ //dispatch action here\n      isLogin: false,\n    });\n  };\n\n  render(): React.ReactElement {\n    const state = store.getState()\n    return (\n      <div>\n        <h1>Home</h1>\n\n        {state.logUser.isLogged || isInStorage() ? (\n          <button /*onClick={() => this.handleLogout()}*/>Click here to log out</button>\n        ) : (\n          <Link to='/login'>Go to sign in page</Link>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { useState, FC, useEffect } from 'react';\nimport './App.css';\nimport { Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport PublicRoute from '../components/PublicRoute';\nimport PrivateRoute from '../components/PrivateRoute';\nimport SignIn from '../components/SignIn';\nimport Book from '../components/Book';\nimport Home from './Home';\n\nimport { logUser, setPhones } from '../reducers';\ninterface IName {\n  first: string;\n  last: string;\n}\n\nexport interface IPerson {\n  id: string;\n  isActive: boolean;\n  age?: number;\n  name: IName;\n  company?: string;\n  email?: string;\n  phone: string;\n  address?: string;\n  registered: string;\n}\nconst mapStateToProps = (state: any) => {\n  console.log('App', state)\n  return {\n    phones: state.setPhones.phones,\n    isLogged: state.logUser.isLogged,\n    form: state.form\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => {\n  //call reducers with DOM events to App props\n  return {\n    onLogUser: () => dispatch(logUser()),\n    //onSetPhones: () => dispatch(setPhones()),\n  };\n};\nconst App = ({ phones }: { phones: Array<IPerson> }, onSetPhones: any): React.ReactElement => {\n\n  useEffect(() => {\n    console.log(onSetPhones);\n  }, []);\n  return (\n    <Switch>\n      <PublicRoute restricted={false} component={Home} path='/home' exact />\n      <PublicRoute restricted={true} component={SignIn} path='/login' exact />\n      <PrivateRoute component={Book} path='/' exact phones={phones} />\n      <Redirect path='/phone_book' to='/login' />\n    </Switch>\n  );\n};\n/*getPhonesHandler = {onSetPhones}*/\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}