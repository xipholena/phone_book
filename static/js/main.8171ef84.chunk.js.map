{"version":3,"sources":["redux/constants.ts","redux/reducers/users.ts","redux/reducers/logUser.ts","redux/rootReducer.ts","redux/actions.ts","utils/index.ts","redux/sagas.ts","redux/store.ts","components/PublicRoute.tsx","components/PrivateRoute.tsx","components/SignIn.tsx","components/Book.tsx","components/Home.tsx","components/User.tsx","components/EditForm.tsx","components/FormAdd.tsx","containers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILED","LOG_OUT","ROUTES","phone","personId","edit","id","GET_USERS_REQUESTED","GET_USERS_SUCCESS","GET_USERS_FAILED","SEND_USER_REQUESTED","SEND_USER_SUCCESS","UPDATE_USER_REQUESTED","DELETE_USER_REQUESTED","DELETE_USER_SUCCESS","initialStateFetch","users","loading","error","isMakingRequest","initialStateLogUser","isLogged","isLoading","email","rootReducer","combineReducers","logUser","state","action","type","message","filter","user","userId","console","log","newUser","logInRequest","logOut","getUsersSuccess","sendUserSuccess","deleteUsersSuccess","TOKEN_KEY","fetchUsers","logInSaga","logOutSaga","handleLogInOut","userSaga","deleteUser","addUser","editUser","manageUserSaga","rootSaga","getPhones","fetch","headers","Accept","redirect","then","response","json","data","phones","catch","e","toString","delay","call","put","localStorage","setItem","removeItem","takeEvery","updatedUser","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","PublicRoute","Component","component","restricted","rest","useSelector","render","props","to","pathname","PrivateRoute","SignIn","useForm","register","handleSubmit","watch","errors","formState","emailValue","dispatch","useDispatch","onSubmit","className","validate","required","value","length","isCorrect","test","placeholder","capital","search","small","digits","password","Book","sort","a","b","name","last","localeCompare","deleteHandler","map","i","slice","first","onClick","Home","User","useParams","person","useMemo","find","u","useEffect","isActive","age","company","address","registered","EditForm","params","firstNameValue","lastNameValue","statusValue","ageValue","companyValue","phoneValue","addressValue","registeredValue","updateUser","isCorrectLength","match","join","startsCorrectly","FormAdd","useHistory","Date","getTime","sendUserRequest","App","getItem","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8171ef84.chunk.js","sourcesContent":["export const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const GET_PHONES = 'GET_PHONES';\n\nexport const ROUTES = {\n  main: '/',\n  home: '/home',\n  login: '/login',\n  add: '/add',\n  projectName: '/phone_book', // webstorm adds it\n  dynamic: {\n    phone: (personId = ':personId') => `/${personId}`,\n    edit: (id = ':id') => `/edit/${id}`,\n  }\n};\n\nexport const GET_USERS_REQUESTED = 'GET_USERS_REQUESTED';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';\n\nexport const SEND_USER_REQUESTED = 'SEND_USER_REQUESTED';\nexport const SEND_USER_SUCCESS = 'SEND_USER_SUCCESS';\nexport const SEND_USER_FAILED = 'SEND_USER_FAILED';\n\nexport const UPDATE_USER_REQUESTED = 'UPDATE_USER_REQUESTED';\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_FAILED = 'UPDATE_USER_FAILED';\n\nexport const DELETE_USER_REQUESTED = 'DELETE_USER_REQUESTED';\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_FAILED = 'DELETE_USER_FAILED';\n\n","import {Reducer} from 'redux'\nimport {\n  GET_USERS_REQUESTED,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILED,\n  DELETE_USER_REQUESTED,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_FAILED,\n  SEND_USER_REQUESTED, SEND_USER_SUCCESS, UPDATE_USER_REQUESTED\n} from \"../constants\";\nimport { IPerson } from '../../containers/App';\nconst initialStateFetch: UsersReturnType = {\n  users: [],\n  loading: false,\n  error: null,\n  isMakingRequest: false\n};\n\nexport type UsersArgsType = {\n  type: typeof GET_USERS_SUCCESS | typeof GET_USERS_FAILED | typeof GET_USERS_REQUESTED | typeof DELETE_USER_REQUESTED | typeof DELETE_USER_SUCCESS | typeof DELETE_USER_FAILED | typeof SEND_USER_REQUESTED | typeof SEND_USER_SUCCESS | typeof UPDATE_USER_REQUESTED;\n  users?: Array<IPerson>;\n  message?: string;\n  userId?: any;\n  newUser?: object;\n};\n\ntype UsersReturnType = {\n  loading?: boolean;\n  users?: Array<IPerson>;\n  error?: string | null;\n  isMakingRequest?: boolean;\n};\n\nexport const  users: Reducer<UsersReturnType, UsersArgsType> = (state = initialStateFetch, action): UsersReturnType => {\n  switch (action.type) {\n    case GET_USERS_REQUESTED:\n        return {\n          ...state,\n          loading: true,\n      }\n\n      \n    case GET_USERS_SUCCESS:\n\n      //if(users.length === 0) {\n        return {\n          ...state,\n          loading: false,\n          users: action.users,\n        };\n      //}\n     // return state;\n\n    case GET_USERS_FAILED:\n      return {\n        ...state,\n        loading: false,\n        error: action.message,\n      };\n    case DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        users: state.users?.filter((user: any) => user.id !== action.userId)\n      }\n    case UPDATE_USER_REQUESTED:\n      return {\n        ...state,\n        isMakingRequest: true,\n      }\n    case SEND_USER_REQUESTED:\n      return {\n        ...state,\n        isMakingRequest: true,\n      }\n    case SEND_USER_SUCCESS:\n      console.log('reducer, action.newUser',action.newUser);\n      return {\n        ...state,\n        users: [\n          //@ts-ignore\n         ...state.users,\n         //@ts-ignore\n         action.newUser\n        ],\n        isMakingRequest: false,\n      }\n    default:\n      return state;\n  }\n}\n","import {Reducer} from 'redux';\nimport {\n  LOG_IN_REQUEST,\n  LOG_IN_FAILED,\n  LOG_IN_SUCCESS,\n  LOG_OUT,\n} from '../constants';\nexport const initialStateLogUser: LogUserReturnType = {\n  isLogged: false,\n  isLoading: false,\n  email: '',\n  error: null,\n};\n\nexport type LogUserArgsType = {\n  type: typeof LOG_IN_REQUEST | typeof LOG_IN_SUCCESS | typeof LOG_IN_FAILED | typeof LOG_OUT;\n  error: null | string;\n  message: string;\n};\n\ntype LogUserReturnType = {\n  isLogged?: boolean;\n  isLoading?: boolean;\n  email: string;\n  error?: null | string;\n};\n\nexport const logUser: Reducer<LogUserReturnType, LogUserArgsType> = (state = initialStateLogUser, action):LogUserReturnType => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isLogged: true,\n      };\n    case LOG_IN_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        isLogged: false,\n        error: action.message,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLogged: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport {users} from \"./reducers/users\";\nimport {logUser} from \"./reducers/logUser\";\nexport const rootReducer = combineReducers({\n  logUser,\n  users,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILED,\n  LOG_OUT,\n  GET_USERS_REQUESTED, GET_USERS_SUCCESS, GET_USERS_FAILED,\n  SEND_USER_REQUESTED, SEND_USER_SUCCESS, SEND_USER_FAILED,\n  UPDATE_USER_REQUESTED, UPDATE_USER_SUCCESS, UPDATE_USER_FAILED,\n  DELETE_USER_REQUESTED, DELETE_USER_SUCCESS, DELETE_USER_FAILED,\n} from \"./constants\";\nimport { IPerson } from \"../containers/App\";\n\ntype LogInRequestType = {\n    type: typeof LOG_IN_REQUEST,\n}\ntype LogInSuccessType = {\n  type: typeof LOG_IN_SUCCESS,\n}\ntype LogInFailedType = {\n  type: typeof LOG_IN_FAILED,\n  message: boolean,\n}\ntype LogOutType = {\n    type: typeof LOG_OUT,\n}\n\ntype GetUsersType = {\n  type: typeof GET_USERS_REQUESTED,\n  currentUsers?: Array<IPerson>,\n}\ntype GetUsersSuccessType = {\n  type: typeof GET_USERS_SUCCESS,\n  users: Array<IPerson>\n}\ntype GetUsersFailedType = {\n  type: typeof GET_USERS_FAILED,\n  message: string\n}\n\ntype ActionsType = LogInRequestType | LogInSuccessType| LogInFailedType| LogOutType | GetUsersType | GetUsersSuccessType | GetUsersFailedType ;\n\n\nexport const logInRequest = (email = ''): ActionsType => ({ type: LOG_IN_REQUEST }); //called in components, saga listens\nexport const logInSuccess = (): ActionsType => ({ type: LOG_IN_SUCCESS});\nexport const logInFailed = (e: any): ActionsType => ({ type: LOG_IN_FAILED, message: e.message });\nexport const logOut = (): ActionsType => ({ type: LOG_OUT });\n\nexport const getUsers = (/*currentUsers: any*/): ActionsType => {\n  console.log ('getting users!');\n  return ({ type: GET_USERS_REQUESTED, /*currentUsers: currentUsers */} );\n}\n\nexport const getUsersSuccess = (users: Array<IPerson>): ActionsType => ({ type: GET_USERS_SUCCESS, users: users });\nexport const getUsersFailed = (e: any): ActionsType => ({ type: GET_USERS_FAILED, message: e.message });\n\nexport const sendUserRequest = (newUser: any): any => {\n  console.log('actions, sendUserRequest, newUser:', newUser)\n  return ({type: SEND_USER_REQUESTED, newUser: newUser})\n};\nexport const sendUserSuccess = (newUser: IPerson): any => {\n  console.log('actions, sendUserSuccess, parameter: ', 'newUser: ' ,newUser )\n  return({ type: SEND_USER_SUCCESS, newUser: newUser });\n}\nexport const sendUserFailed = (e: any): any => ({ type: SEND_USER_FAILED, message: e.message });\n\nexport const updateUser = (id:any, updatedUser: any): any => {\n  console.log('actions updateUser, parameter:', id);\n  return ({ type: UPDATE_USER_REQUESTED, userId: id, updatedUser: updatedUser });\n}\nexport const updateUsersSuccess = (): any => ({ type: UPDATE_USER_SUCCESS });\nexport const updateUsersFailed = (e: any): any => ({ type: UPDATE_USER_FAILED, message: e.message });\n\nexport const deleteUser = (id:any): any => {\n  console.log('actions deleteUser, parameter:', id);\n  return ({ type: DELETE_USER_REQUESTED, userId: id });\n}\nexport const deleteUsersSuccess = (id: any): any => {\n  console.log('actions, deleteUsersSuccess, parameter: ', id )\n  return { type: DELETE_USER_SUCCESS, userId: id }\n};\nexport const deleteUsersFailed = (e: any): any => ({ type: DELETE_USER_FAILED, message: e.message });\n","const TOKEN_KEY = 'current user';\n\nexport const loginToStorage = (/*/email: string*/): void => {\n  localStorage.setItem(TOKEN_KEY, /*email*/ 'some email');\n};\n\nexport const logoutOfStorage = (): void => {\n  localStorage.removeItem(TOKEN_KEY);\n};\n\nexport const isInStorage = (): boolean => {\n  if (localStorage.getItem(TOKEN_KEY)) {\n    return true;\n  }\n\n  return false;\n};\n","import { put, takeEvery, all, call, delay } from 'redux-saga/effects';\nimport {\n  GET_USERS_REQUESTED,\n  LOG_IN_REQUEST,\n  LOG_OUT,\n  DELETE_USER_REQUESTED,\n  SEND_USER_REQUESTED, LOG_IN_SUCCESS, UPDATE_USER_REQUESTED\n} from \"./constants\";\nimport {logInSuccess, logInFailed, logOut,\n   getUsersSuccess, getUsersFailed,\n   deleteUsersSuccess, \n   sendUserSuccess\n  } from './actions';\nimport { loginToStorage, logoutOfStorage } from '../utils';\nimport {} from './constants';\nimport { IPerson } from '../containers/App';\nimport { log } from \"util\";\n\ntype FetchUserParams = {\n  type: string;\n  users?: Array<IPerson>;\n  message?: string;\n};\n\nconst URL = 'http://localhost:3000/phones.json';\nconst getPhones = () => {\n  return fetch(URL, {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      redirect: 'error'\n    },\n  })\n    .then(response => response.json())\n    .then(data => data.phones)\n    .catch(e => {\n      console.log('some error', e.toString());\n    });\n};\n\n\nconst logger = () => {\n\n}\nfunction* fetchUsers(action: FetchUserParams): any {\n  //Since a generator function can technically return a dynamic value depending on how next() is called, Redux-Saga had decided it best to use type any rather than try to infer a type.\n  try {\n    yield delay(1000);\n    const users = yield call(getPhones);\n\n    yield put(getUsersSuccess(users)); //put === dispatch(action.type, payload)\n  } catch (e) {\n    yield put(getUsersFailed(e));\n  }\n}\n\nfunction* logInSaga(action: any): any {\n  try {\n    yield delay(1000);\n    loginToStorage();\n    yield put(logInSuccess());\n  } catch (e) {\n    yield put(logInFailed(e));\n  }\n}\nfunction* logOutSaga(action: any): any {\n  logoutOfStorage();\n  yield put(logOut());\n}\n\nfunction* handleLogInOut(): any {\n  //watcher\n  yield takeEvery(LOG_IN_REQUEST, logInSaga);\n  yield takeEvery(LOG_OUT, logOutSaga);\n}\n\nfunction* userSaga(): any {\n  //watcher\n  yield takeEvery(LOG_IN_SUCCESS, fetchUsers); //listens to action with action.type GET_USERS_REQUESTED,  and when it is called calls function  fetchUsers\n} //action is still being dispatched\n\n\n\nfunction* deleteUser (action: any): any {\n  try {\n    yield delay(1000);\n    yield put(deleteUsersSuccess(action.userId))\n  } catch (e) {\n    \n  } \n}\n\nfunction* addUser (action: any): any {\n  try {\n    // @ts-ignore\n   // yield call(console.log('saga worker ADD User', action))\n    yield delay(1000);\n    yield put(sendUserSuccess(action.newUser))\n  } catch (e) {\n    \n  } \n}\nfunction* editUser( action: any): any {\n  try {\n    // @ts-ignore\n   // yield call(console.log('saga worker editUser', action))\n    yield delay(1000);\n    yield put(deleteUsersSuccess(action.userId))\n    yield put(sendUserSuccess(action.updatedUser))\n  } catch (e) {\n\n  }\n}\n\nfunction* manageUserSaga(): any {\n  //watcher\n  yield takeEvery(DELETE_USER_REQUESTED, deleteUser) //pass DELETE_USER_REQUESTED action as arg to deleteUser saga\n  yield takeEvery(SEND_USER_REQUESTED, addUser)\n  yield takeEvery(UPDATE_USER_REQUESTED, editUser)\n}\n\nexport default function* rootSaga(): any {\n  yield all([\n    userSaga(), //fetch\n    handleLogInOut(),\n    manageUserSaga(),\n  ]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {  LogUserArgsType } from './reducers/logUser';\nimport {  UsersArgsType  } from './reducers/users';\nimport {rootReducer, RootState} from './rootReducer'\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n\nexport const sagaAction = (type: any ) => store.dispatch({ type }); //saga\n\nexport default store;\n","import React, { useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ROUTES } from '../redux/constants';\nimport { useSelector } from 'react-redux';\ntype PublicRouteProps = {\n  component: any;\n  restricted: any;\n  path: string;\n  exact: boolean;\n};\nconst PublicRoute = ({ component: Component, restricted, ...rest }: PublicRouteProps): React.ReactElement => {\n  const state: any = useSelector(state => state);\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        state.logUser.isLogged && restricted ? <Redirect to={{ pathname: ROUTES.main }} /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ROUTES } from '../redux/constants';\nimport { useSelector } from 'react-redux';\n\ntype PrivateRouteProps = {\n  component: any;\n  path: string;\n  exact?: boolean;\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }: PrivateRouteProps): React.ReactElement => {\n  const state: any = useSelector(state => state);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        state.logUser.isLogged ? <Component {...props} /> : <Redirect to={{ pathname: ROUTES.login }} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { FC} from 'react';\nimport { logInRequest } from '../redux/actions';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/rootReducer';\nexport const SignIn: FC = (): React.ReactElement => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const emailValue = watch('email');\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state: RootState | any) => state.logUser.isLoading);\n  const handleLogin = ():void => {\n    dispatch(logInRequest(emailValue)); // saga watcher listens\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(handleLogin)} className='form'>\n        {' '}\n        {/* your form submit function which will invoke after successful validation*/}\n        {/* register your input into the hook by invoking the \"register\" function */}\n        <input\n          {...register('email', {\n            //name=== errors obj property containing all validation errors for this specific field\n            validate: {\n              required: value => value.length || 'This field is required', //so validation need to return false to be passed\n              isCorrect: value => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) || 'Invalid email address',\n            },\n          })}\n          className='form__field'\n          placeholder=\"email\"\n        />\n        {/* errors will return when field validation fails  */}\n        {errors.email && <span>{errors.email?.message}</span>}{' '}\n        {/*errors.email?.message - one entity for all possible messages*/}\n        {/* include validation with required or other standard HTML validation rules */}\n        <input\n          {...register('password', {\n            validate: {\n              required: value => value.length || 'This field is required',\n              length: value => value.length > 8 || 'Needs at least 8 symbols',\n              capital: value => value.search(/[A-Z]/) !== -1 || 'Must contain at least 1 capital letter',\n              small: value => value.search(/[a-z]/) !== -1 || 'Must contain at least 1 small letter',\n              digits: value => value.search(/[0-9]/) !== -1 || 'Must contain at least 1 digit',\n            },\n          })}\n          className='form__field'\n          type=\"password\"\n          placeholder=\"password\"\n        />\n        {errors.password && <span>{errors.password?.message}</span>}\n        <input type='submit' className='form__button' />\n      </form>\n      {isLoading ? (\n        <div className='dialog'>\n          <div className='dialog__overlay'>\n            <div className='dialog__window'>\n              <p className='dialog__msg'>Getting access...</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, FC } from 'react';\nimport { IPerson } from '../containers/App';\nimport { Link, Route, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteUser, getUsers } from \"../redux/actions\";\nimport { ROUTES } from '../redux/constants';\nimport { RootState } from '../redux/rootReducer';\n\nconst Book: FC = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const phones = useSelector((state: RootState | any) =>\n    state.users.users?.sort((a: any, b: any) => a.name.last.localeCompare(b.name.last))\n  );\n\n  const loading = useSelector((state: RootState | any) => state.users.loading);\n  //const currentUsers = useSelector((state: RootState | any) => state.users.users )\n\n  \n\n\n  const deleteHandler: any = ( e: any, id: any): void => {\n    dispatch(deleteUser(id))\n  }\n\n  return (\n    <main className='main'>\n      <div className='bg'>\n        <div className='container'>\n          <Link to={{ pathname: ROUTES.home }} className='main__link'>\n            Go home\n          </Link>\n        </div>\n      </div>\n      <div className='container'>\n\n        <Link to={ROUTES.add} className=\"form__button\">\n          Add user\n        </Link>\n\n        {loading ? (\n          <p>Wait for it...</p>\n        ) : (\n          <ul>\n            {phones?.map(({ id, name, phone }: IPerson, i: number) => {\n              if (phones[i - 1]?.name.last.slice(0, 1) !== phones[i]?.name.last.slice(0, 1)) {\n                // @ts-ignore\n                return (\n                  <li key={id} className='withSeparator'>\n                    <p>{phones[i].name.last.slice(0, 1)} </p>\n                    <ul className='firstInRow'>\n                      <li className='name'>\n                        <Link to={`/${id}`}>\n                          {name.last} {name.first} \n                        </Link>\n                        <button onClick={(e) =>deleteHandler(e, id)} type=\"button\" className=\"form__button\">Delete user </button>\n                      </li>\n                    </ul>\n                  </li>\n                );\n              } else {\n\n                return (\n                  <>\n                  <li key={id} className='name'>\n                    <Link to={`/${id}`}>\n                    {name.last} {name.first} \n                    </Link>\n                    <button onClick={(e) =>deleteHandler(e, id)} type=\"button\" className=\"form__button\">Delete user </button>\n                  </li>\n\n                </>\n                );\n              }\n            })}\n          </ul>\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default Book;\n","import React, {FC} from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { logOut } from '../redux/actions';\nimport { ROUTES } from '../redux/constants';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Home: FC = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = (): void => {\n    dispatch(logOut()); // saga watcher listens\n  };\n  const state: any = useSelector(state => state);\n  return (\n    <div>\n      <h1>Home</h1>\n      {state.logUser.isLogged ? (\n        <button onClick={() => handleLogout()}>Click here to log out</button>\n      ) : (\n        <Link to={{ pathname: ROUTES.login }}>Go to sign in page</Link>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { FC, useEffect, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/rootReducer\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst User: FC = () => {\n  const { personId } = useParams<{personId: string}>();\n  const users = useSelector((state: RootState)=> state.users.users);\n  const person = useMemo(() => users?.find(u => u.id === personId), [users, personId]);\n\n  const params = useParams();\n  useEffect(() => {\n    console.log('personId', personId);\n    console.log('person', person);\n  })\n  return person\n    ? (\n    <>\n      <div className=\"container\">\n        <Link to={`/edit/:${person.id}`} className=\"form__button\">Edit user </Link>\n        <div className=\"person\">\n          <h1>{person.name.first} {person.name.last}</h1>\n          <p>\n            <span className=\"person__info-title\">id:  </span>\n            <span className=\"person__info-description\">{person.id}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Status:  </span>\n            <span className=\"person__info-description\">{person.isActive? `active` : `not active`}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Age:  </span>\n            <span className=\"person__info-description\">{person.age}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Company:  </span>\n            <span className=\"person__info-description\">{person.company}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Email:  </span>\n            <span className=\"person__info-description\">{person.email}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Phone:  </span>\n            <span className=\"person__info-description\">{person.phone}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Address: </span>\n            <span className=\"person__info-description\">{person.address}</span>\n          </p>\n          <p>\n            <span className=\"person__info-title\">Registered:  </span>\n            <span className=\"person__info-description\">{person.registered}</span>\n          </p>\n        </div>\n      </div>\n    </>\n  )\n    : <h1>Sorry, something went wrong</h1>\n};\n\nexport default User;","import React,{ useEffect} from \"react\";\nimport {useLocation, useParams, useRouteMatch} from 'react-router-dom'\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUser } from \"../redux/actions\";\n\nconst EditForm = (): React.ReactElement => {\n\n  const params = useParams();\n  useEffect(() => {\n    console.log('params',params);\n  })\n\n  const dispatch = useDispatch();\n  // @ts-ignore\n  const isMakingRequest = useSelector(state=>state?.users.isMakingRequest);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const firstNameValue = watch('firstName');\n  const lastNameValue = watch('lastName');\n  const statusValue = watch('status');\n  const ageValue = watch('age');\n  const companyValue = watch('company');\n  const emailValue = watch('email');\n  const phoneValue = watch('phone');\n  const addressValue = watch('address');\n  const registeredValue = watch('registered');\n\n\n  const updatedUser = {\n    // @ts-ignore\n    \"id\": params.id.slice(1),\n    \"isActive\": statusValue === 'active' ? true : false,\n    \"age\": ageValue,\n    \"name\": {\n      \"first\": firstNameValue,\n      \"last\": lastNameValue,\n    },\n    \"company\": companyValue,\n    \"email\": emailValue,\n    \"phone\": phoneValue,\n    \"address\": addressValue,\n    \"registered\": registeredValue,\n  }\nconst editHandler = () => {\n  //@ts-ignore\n  console.log(params.id.slice(1));\n  // @ts-ignore\n  dispatch(updateUser(params.id.slice(1), updatedUser))\n}\n\n  return (\n    <>\n      <div className=\"container\">\n        <form onSubmit={handleSubmit(editHandler)} className=\"edit-form\">\n          <p className=\"edit-form__title\">\n            Edit profile\n          </p>\n\n            <input\n            type=\"text\"\n            placeholder=\"First name\"\n            className=\"add-form__field\"\n\n            {...register('firstName', {})}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"Last name\"\n            className=\"add-form__field\"\n\n            {...register('lastName', {})}\n          />\n\n            <select\n              className=\"add-form__field\"\n              {...register('status')}\n            >\n              <option value=\"active\">active</option>\n              <option value=\"not active\">not active</option>\n            </select>\n\n          <input\n            type=\"number\"\n            placeholder=\"Age\"\n            className=\"add-form__field\"\n\n            {...register('age', {\n              validate: {\n                required: (value: any) => value.length || 'This field is required',\n                isCorrect: (value: any) => +value >= 1 && +value <= 120|| 'Your age must be 1 to 120 years',\n              },\n            })}\n          />\n          {errors.age?.message && <span>{errors.age?.message}</span>}\n\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            className=\"add-form__field\"\n\n            {...register('company', {})}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"Email\"\n            className=\"add-form__field\"\n\n            {...register('email', {\n              validate: {\n                required: (value: any) => value.length || 'This field is required',\n                isCorrect: (value: any) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) || 'Invalid email address',\n              },\n            })}\n          />\n          {errors.email?.message && <span>{errors.email?.message}</span>}\n\n          <input\n            type=\"text\"\n            placeholder=\"Phone\"\n            className=\"add-form__field\"\n\n            {...register('phone', {\n              validate: {\n                required: (value: any) => value.length || 'This field is required',\n                isCorrectLength: (value: any) => value.match(/[0-9]/g).join('').length !== 11 || 'Phone number must contain 11 digits',\n                startsCorrectly: (value: any) => value.slice(0,1) === '1' || value.slice(1,2) === '1' || 'Phone number must start with 1',\n              },\n            })}\n          />\n          {errors.phone?.message && <span>{errors.phone?.message}</span>}\n\n          <input\n            type=\"text\"\n            placeholder=\"Address\"\n            className=\"add-form__field\"\n            {...register('address', {})}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"Registered\"\n            className=\"add-form__field\"\n\n            {...register('registered', {})}\n          />\n\n          <button\n            className=\"form__button\"\n            //type=\"button\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n      {isMakingRequest ? (\n        <div className='dialog'>\n          <div className='dialog__overlay'>\n            <div className='dialog__window'>\n              <p className='dialog__msg'>Sending data...</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  )\n};\nexport default EditForm;\n\n\n\n\n","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendUserRequest, sendUserSuccess } from \"../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction FormAdd() {\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n  // @ts-ignore\n  const isMakingRequest = useSelector(state=>state?.users.isMakingRequest);\n\n  const firstNameValue = watch('firstName');\n  const lastNameValue = watch('lastName');\n  const statusValue = watch('status');\n  const ageValue = watch('age');\n  const companyValue = watch('company');\n  const emailValue = watch('email');\n  const phoneValue = watch('phone');\n  const addressValue = watch('address');\n  const registeredValue = watch('registered');\n\n\n  const handleAdd = ():void => {\n    console.log(\n      firstNameValue,\n      lastNameValue,\n      'status:', statusValue,\n      ageValue,\n      companyValue,\n      emailValue,\n      phoneValue,\n      addressValue,\n      registeredValue,\n  )\n  \n  const newUser = {\n      \"id\": new Date().getTime().toString(),\n      \"isActive\": statusValue === 'active' ? true : false,\n      \"age\": ageValue,\n      \"name\": {\n        \"first\": firstNameValue,\n        \"last\": lastNameValue,\n      },\n      \"company\": companyValue,\n      \"email\": emailValue,\n      \"phone\": phoneValue,\n      \"address\": addressValue,\n      \"registered\": registeredValue,\n  }\n    //console.log(newUser)\n    dispatch(sendUserRequest(newUser))\n  };\n  return (\n    <>\n      <div className=\"container\">\n        <form className=\"add-form\" onSubmit={handleSubmit(handleAdd)}>\n\n          <input\n            type=\"text\"\n            placeholder=\"First name\"\n            className=\"add-form__field\"\n\n            {...register('firstName', {})}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"Last name\"\n            className=\"add-form__field\"\n\n            {...register('lastName', {})}\n          />\n\n            <select\n              className=\"add-form__field\"\n              {...register('status')}\n            >\n              <option value=\"active\">active</option>\n              <option value=\"not active\">not active</option>\n            </select>\n\n          <input\n            type=\"number\"\n            placeholder=\"Age\"\n            className=\"add-form__field\"\n\n            {...register('age', {\n              validate: {\n                required: (value: any) => value.length || 'This field is required',\n                isCorrect: (value: any) => +value >= 1 && +value <= 120|| 'Your age must be 1 to 120 years',\n              },\n            })}\n          />\n          {errors.age?.message && <span>{errors.age?.message}</span>}\n\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            className=\"add-form__field\"\n\n            {...register('company', {})}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"Email\"\n            className=\"add-form__field\"\n\n            {...register('email', {\n              validate: {\n                required: (value: any) => value.length || 'This field is required',\n                isCorrect: (value: any) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) || 'Invalid email address',\n              },\n            })}\n          />\n          {errors.email?.message && <span>{errors.email?.message}</span>}\n\n          <input\n            type=\"text\"\n            placeholder=\"Phone\"\n            className=\"add-form__field\"\n\n            {...register('phone', {\n              validate: {\n                required: (value: any) => value.length || 'This field is required',\n                isCorrectLength: (value: any) => value.match(/[0-9]/g).join('').length !== 11 || 'Phone number must contain 11 digits',\n                startsCorrectly: (value: any) => value.slice(0,1) === '1' || value.slice(1,2) === '1' || 'Phone number must start with 1',\n              },\n            })}\n          />\n          {errors.phone?.message && <span>{errors.phone?.message}</span>}\n\n          <input\n            type=\"text\"\n            placeholder=\"Address\"\n            className=\"add-form__field\"\n            {...register('address', {})}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"Registered\"\n            className=\"add-form__field\"\n\n            {...register('registered', {})}\n          />\n\n          <button\n            type=\"submit\"\n            className=\"form__button\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n      {isMakingRequest ? (\n        <div className='dialog'>\n          <div className='dialog__overlay'>\n            <div className='dialog__window'>\n              <p className='dialog__msg'>Sending data...</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default FormAdd;\n\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { Redirect, Switch, Route, useLocation } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport PublicRoute from '../components/PublicRoute';\nimport PrivateRoute from '../components/PrivateRoute';\nimport { SignIn } from '../components/SignIn';\nimport { isInStorage } from '../utils';\nimport Book from '../components/Book';\nimport Home from '../components/Home';\nimport User from \"../components/User\";\nimport EditForm from \"../components/EditForm\";\nimport FormAdd from \"../components/FormAdd\";\nimport { ROUTES } from '../redux/constants';\nimport { logInRequest } from '../redux/actions';\nimport { RootState } from \"../redux/rootReducer\";\ninterface IName {\n  first: string;\n  last: string;\n}\n\nexport interface IPerson {\n  id: string;\n  isActive: boolean;\n  age?: number;\n  name: IName;\n  company?: string;\n  email?: string;\n  phone: string;\n  address?: string;\n  registered: string;\n}\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state=>state)\n\n  useEffect(() => {\n    if (isInStorage()) {\n      dispatch(logInRequest()); // saga watcher listens\n    }\n  }, [dispatch]);\n\n\n  console.log('render App');\n  console.log('state', state);\n\n  return (\n    <>\n      <Switch>\n        <PrivateRoute component={FormAdd} path={ROUTES.add}/>\n        <PrivateRoute component={EditForm} path={ROUTES.dynamic.edit()} />\n        <PrivateRoute component={Book} path={ROUTES.main} exact />\n        <PublicRoute restricted={false} component={Home} path={ROUTES.home} exact />\n        <PublicRoute restricted={true} component={SignIn} path={ROUTES.login} exact />\n        <PrivateRoute component={User} path={ROUTES.dynamic.phone()} exact />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}