{"version":3,"sources":["utils/index.ts","components/PublicRoute.tsx","components/PrivateRoute.tsx","components/SignIn.tsx","components/Book.tsx","containers/Home.tsx","containers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["TOKEN_KEY","isLogin","localStorage","getItem","PublicRoute","Component","component","restricted","rest","render","props","to","PrivateRoute","phones","getPhonesHandler","SignIn","handleLogin","setItem","history","push","onClick","Book","useEffect","className","map","id","name","phone","last","first","Home","handleLogout","removeItem","setState","state","this","App","useState","setPhones","a","fetch","headers","then","response","json","data","sort","b","localeCompare","catch","e","console","log","toString","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.839928a7.chunk.js","sourcesContent":["const TOKEN_KEY = 'jwt';\n\nexport const login = ():void => {\n    localStorage.setItem(TOKEN_KEY, 'TestLogin');\n}\n\nexport const logout = ():void => {\n    localStorage.removeItem(TOKEN_KEY);\n}\n\nexport const isLogin = (): boolean => {\n    if (localStorage.getItem(TOKEN_KEY)) {\n        return true;\n    }\n\n    return false;\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils';\n\ntype PublicRouteProps = {\n    component: any,\n    restricted: any,\n    path: string,\n    exact: boolean\n}\nconst PublicRoute = ({component: Component, restricted, ...rest}:PublicRouteProps ): React.ReactElement => {\n    return (\n        <Route {...rest} render={props => (\n            isLogin() && restricted\n                ? <Redirect to=\"/dashboard\" />\n                : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils';\nimport {IPerson} from \"../containers/App\";\n\ntype PrivateRouteProps = {\n    component: any,\n    phones: Array<IPerson>,\n    getPhonesHandler: any,\n    path: string,\n    exact: boolean\n}\nconst PrivateRoute = ({component: Component, phones, getPhonesHandler, ...rest}: PrivateRouteProps): React.ReactElement => {\n    return (\n        <Route {...rest} render={props => (\n            isLogin()\n                ? <Component phones={phones} getPhonesHandler={getPhonesHandler} {...props} />\n                : <Redirect to=\"/login\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { login } from '../utils';\nimport {RouteComponentProps} from 'react-router-dom'\nconst SignIn = (props: RouteComponentProps): React.ReactElement => {\n\n    const handleLogin = () => {\n        login();\n        props.history.push('/');\n    }\n    return (\n        <div>\n            <h1>Sign in</h1>\n            <button onClick={() => handleLogin()}>Click here to log in</button>\n        </div>\n    );\n};\n\nexport default SignIn;","import React, {useEffect} from 'react';\nimport {IPerson} from \"../containers/App\";\nimport {Link} from \"react-router-dom\";\n\ninterface BookProps {\n    phones: Array<IPerson>,\n    getPhonesHandler: () => void\n}\n\nconst Book = ({phones, getPhonesHandler}: BookProps): React.ReactElement => {\n\n    useEffect(() => {\n        getPhonesHandler();\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <main className=\"main\">\n            <div className=\"container\">\n                <ul>\n                    {phones?.map(({id, name, phone}: IPerson) => (\n                        <li key={id}>\n                            {name.last} {name.first}, phone: {phone}\n                        </li>\n                    ))}\n                </ul>\n                <Link to=\"/home\">Go home</Link>\n            </div>\n\n        </main>\n    );\n};\n\nexport default Book;\n","import React, { Component } from 'react';\nimport { logout, isLogin } from '../utils';\nimport { Link, RouteComponentProps } from 'react-router-dom';\n\n\ntype MatchParams = {\n    id: string\n}\ntype HomeState = {\n    isLogin: boolean\n}\nclass Home extends Component<RouteComponentProps<MatchParams>, HomeState> {\n\n    constructor(props: RouteComponentProps<MatchParams>) {\n        super(props);\n\n        this.state = {\n            isLogin: isLogin()\n        }\n    }\n\n    handleLogout = ():void => {\n        logout();\n        this.setState({\n            isLogin: false\n        })\n    }\n\n    render(): React.ReactElement  {\n        return (\n            <div>\n                <h1>Home</h1>\n\n                {this.state.isLogin ?\n                    <button onClick={() => this.handleLogout()}>Click here to log out</button>\n                    : <Link to=\"/login\">Go to sign in page</Link>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, {useState, FC} from 'react';\nimport './App.css';\nimport {Redirect, Switch} from 'react-router-dom';\n\nimport PublicRoute from \"../components/PublicRoute\";\nimport PrivateRoute from \"../components/PrivateRoute\";\nimport SignIn from \"../components/SignIn\";\nimport Book from \"../components/Book\";\nimport Home from \"./Home\";\ninterface IName {\n    first: string,\n    last: string\n}\n\nexport interface IPerson {\n    id: string,\n    isActive: boolean,\n    age?: number,\n    name: IName,\n    company?: string,\n    email?: string,\n    phone: string,\n    address?: string,\n    registered: string\n}\n\nconst App: FC = (): React.ReactElement => {\n    const [phones, setPhones] = useState<Array<IPerson>>([]);\n\n   async function getPhonesHandler(){\n       return fetch('http://localhost:3000/phones.json', {\n           headers: {\n               'Content-Type': 'application/json',\n               'Accept': 'application/json',\n           }\n       })\n           .then((response) => response.json())\n           .then((data) => setPhones(data.phones.sort((a: IPerson, b:IPerson ):any => a.name.last.localeCompare(b.name.last))))\n           .catch((e) => {\n               console.log(e.toString())\n           })\n   }\n\n\n\n    return (\n        <Switch>\n            <PublicRoute  restricted={false} component={Home} path=\"/home\" exact />\n            <PublicRoute restricted={true} component={SignIn} path=\"/login\" exact />\n            <PrivateRoute\n                component={Book} path=\"/\" exact //was /dashboard\n                phones={phones} getPhonesHandler={getPhonesHandler}\n            />\n            <Redirect path=\"/phone_book\" to='/login'/>\n        </Switch>\n\n    );\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}