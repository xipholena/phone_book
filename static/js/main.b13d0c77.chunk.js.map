{"version":3,"sources":["constants.js","reducers.js","store.js","utils/index.ts","components/PublicRoute.tsx","components/PrivateRoute.tsx","components/SignIn.tsx","components/Book.tsx","containers/Home.tsx","containers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LOG_IN","LOG_OUT","GET_PHONES","initialState","isLogged","phones","logUser","state","action","type","setPhones","payload","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","TOKEN_KEY","isLogin","localStorage","getItem","PublicRoute","Component","component","restricted","rest","render","props","to","PrivateRoute","getPhonesHandler","SignIn","routeProps","inputEmailValidator","Field","name","Book","reduxForm","form","initialValues","emailField","passwordField","onSubmit","values","errors","test","length","search","useEffect","className","map","i","id","phone","last","slice","first","Home","handleLogout","removeItem","setState","this","onClick","connect","dispatch","onLogUser","onSetPhones","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b13d0c77.chunk.js","sourcesContent":["export const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const GET_PHONES = 'GET_PHONES'","import {combineReducers} from \"redux\";\nimport {LOG_IN, LOG_OUT, GET_PHONES} from \"./constants\";\n\n\nexport const initialState = {\n    isLogged: false,\n    phones: [],\n    //emailField: '', //controlled by redux-forms?\n    //passwordField: '',\n}\n\n\nexport const logUser = (state = initialState.isLogged, action) => {\n    switch (action.type) {\n        case LOG_IN:\n            return {\n                ...state,\n                isLogged: true,\n            };\n        case LOG_OUT:\n            return {\n                ...state,\n                isLogged: false\n            };\n        default:\n            return state;\n    }\n}\n\nexport const setPhones = (state = initialState.phones, action) => {\n    switch (action.type) {\n        case GET_PHONES:\n            return {\n                ...state,\n                phones: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n\nexport const rootReducer = combineReducers({\n    logUser,\n    setPhones\n})\n\n\n\n","import {createStore, applyMiddleware} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {rootReducer, initialState} from './reducers'\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware()));\n\nexport default store;","const TOKEN_KEY = 'jwt';\n\nexport const login = (): void => {\n  localStorage.setItem(TOKEN_KEY, 'TestLogin');\n};\n\nexport const logout = (): void => {\n  localStorage.removeItem(TOKEN_KEY);\n};\n\nexport const isLogin = (): boolean => {\n  if (localStorage.getItem(TOKEN_KEY)) {\n    return true;\n  }\n\n  return false;\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils';\n\ntype PublicRouteProps = {\n  component: any;\n  restricted: any;\n  path: string;\n  exact: boolean;\n};\nconst PublicRoute = ({ component: Component, restricted, ...rest }: PublicRouteProps): React.ReactElement => {\n  return (\n    <Route\n      {...rest}\n      render={props => (isLogin() && restricted ? <Redirect to='/dashboard' /> : <Component {...props} />)}\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils';\nimport { IPerson } from '../containers/App';\n\ntype PrivateRouteProps = {\n  component: any;\n  phones: Array<IPerson>;\n  getPhonesHandler: any;\n  path: string;\n  exact: boolean;\n};\nconst PrivateRoute = ({\n  component: Component,\n  phones,\n  getPhonesHandler,\n  ...rest\n}: PrivateRouteProps): React.ReactElement => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLogin() ? (\n          <Component phones={phones} getPhonesHandler={getPhonesHandler} {...props} />\n        ) : (\n          <Redirect to='/login' />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { login } from '../utils';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { reduxForm, change, formValues, Field } from \"redux-form\";\n\ninterface SignInProps  {\n    routeProps: RouteComponentProps,\n    inputEmailValidator: () => void,\n}\n\nexport const SignIn = ({ routeProps, inputEmailValidator }: SignInProps): React.ReactElement => { //was props: RouteComponentProps\n  /*const handleLogin = () => {\n    login();\n    routeProps.history.push('/');\n  };*/\n  return (\n    <div>\n      <h1>Sign in</h1>\n      <form> {/*from props or from reduxForm?*/}\n          <Field\n              name=\"emailField\" //Equals to values.emailField in validator\n            type=\"text\"\n            component=\"input\" // Field = HOC, component = element to wrap\n          />\n\n          <Field\n              name=\"passwordField\" //Equals to values.passwordField in validator\n              type=\"text\"\n              component=\"input\" // Field = HOC, component = element to wrap\n          />\n          <button>Click here to log in</button>\n      </form>\n    </div>\n  );\n};\n\ninterface ValidationValues {\n    emailField?: string, //unnecessary because errors object initially empty\n    passwordField?: string\n}\n\nexport default reduxForm({\n    form: \"signIn\", //equals dispatched changes // a unique identifier for this form\n    initialValues: {\n        emailField: '',\n        passwordField: ''\n    },\n    onSubmit: (values:ValidationValues) => { //DOM e.target.value?\n        const errors: ValidationValues = {}; //collecting errors to display\n        if (!values.emailField) {\n            errors.emailField = 'Email Required'\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) {\n            errors.emailField = 'Invalid email address'\n        }\n\n        if(!values.passwordField) {\n            errors.passwordField = 'Password Required'\n        } else if (values.passwordField.length < 8) {\n            errors.passwordField = 'Needs at least 8 symbools'\n        } else if (values.passwordField.search(/[A-Z]/) === -1) {\n            errors.passwordField = 'Must contain at least 1 capital letter'\n        } else if (values.passwordField.search(/[a-z]/) === -1) {\n            errors.passwordField = 'Must contain at least 1 small letter'\n        } else if (values.passwordField.search(/[0-9]/) === -1) {\n            errors.passwordField = 'Must contain at least 1 digit'\n        }\n    }\n})\n\n\n\n//export default SignIn; //Module cannot have multiple default exports\n","import React, { useEffect } from 'react';\nimport { IPerson } from '../containers/App';\nimport { Link } from 'react-router-dom';\n\ninterface BookProps {\n  phones: Array<IPerson>;\n  getPhonesHandler: () => void;\n}\n\nconst Book = ({ phones, getPhonesHandler }: BookProps): React.ReactElement => {\n  useEffect(() => {\n    getPhonesHandler();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <main className='main'>\n      <div className='container'>\n        <ul>\n          {phones?.map(({ id, name, phone }: IPerson, i) => {\n            if (phones[i - 1]?.name.last.slice(0, 1) !== phones[i]?.name.last.slice(0, 1)) {\n              return (\n                <li key={id} className='withSeparator'>\n                  <p>{phones[i].name.last.slice(0, 1)} </p>\n                  <ul className='firstInRow'>\n                    <li>\n                      {name.last} {name.first}, phone: {phone}\n                    </li>\n                  </ul>\n                </li>\n              );\n            } else {\n              return (\n                <li key={id}>\n                  {name.last} {name.first}, phone: {phone}\n                </li>\n              );\n            }\n          })}\n        </ul>\n        <Link to='/home'>Go home</Link>\n      </div>\n    </main>\n  );\n};\n\nexport default Book;\n","import React, { Component } from 'react';\nimport { logout, isLogin } from '../utils';\nimport { Link, RouteComponentProps } from 'react-router-dom';\n\ntype MatchParams = {\n  id: string;\n};\ntype HomeState = {\n  isLogin: boolean;\n};\nclass Home extends Component<RouteComponentProps<MatchParams>, HomeState> {\n  constructor(props: RouteComponentProps<MatchParams>) {\n    super(props);\n\n    this.state = {\n      isLogin: isLogin(),\n    };\n  }\n\n  handleLogout = (): void => {\n    logout();\n    this.setState({\n      isLogin: false,\n    });\n  };\n\n  render(): React.ReactElement {\n    return (\n      <div>\n        <h1>Home</h1>\n\n        {this.state.isLogin ? (\n          <button onClick={() => this.handleLogout()}>Click here to log out</button>\n        ) : (\n          <Link to='/login'>Go to sign in page</Link>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { useState, FC } from 'react';\nimport './App.css';\nimport { Redirect, Switch } from 'react-router-dom';\nimport {connect} from \"react-redux\";\n\n\nimport PublicRoute from '../components/PublicRoute';\nimport PrivateRoute from '../components/PrivateRoute';\nimport {SignIn} from '../components/SignIn';\nimport Book from '../components/Book';\nimport Home from './Home';\n\nimport {logUser, setPhones} from '../reducers'\ninterface IName {\n  first: string;\n  last: string;\n}\n\nexport interface IPerson {\n  id: string;\n  isActive: boolean;\n  age?: number;\n  name: IName;\n  company?: string;\n  email?: string;\n  phone: string;\n  address?: string;\n  registered: string;\n}\nconst mapStateToProps = (state: any) => {\n    return {\n        phones: state.phones,\n        isLogged: state.isLogged,\n    }\n}\nconst mapDispatchToProps = (dispatch: any) => {\n    //call reducers with DOM events to App props\n    return {\n        onLogUser: () => dispatch(logUser()),\n        onSetPhones: () => dispatch(setPhones()),\n    }\n}\nconst App = ({phones}: {phones: Array<IPerson>}, onSetPhones: any): React.ReactElement => {\n  //const [phones, setPhones] = useState<Array<IPerson>>([]);\n\n  /*async function getPhonesHandler() {\n    return fetch('http://localhost:3000/phones.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(data => setPhones(data.phones.sort((a: IPerson, b: IPerson) => a.name.last.localeCompare(b.name.last))))\n      .catch(e => {\n        console.log(e.toString());\n      });\n  }*/\n\n  return (\n    <Switch>\n      <PublicRoute restricted={false} component={Home} path='/home' exact />\n      <PublicRoute restricted={true} component={SignIn} path='/login' exact />\n      <PrivateRoute\n        component={Book}\n        path='/'\n        exact\n        phones={phones}\n        getPhonesHandler={onSetPhones}\n      />\n      <Redirect path='/phone_book' to='/login' />\n    </Switch>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>,\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}